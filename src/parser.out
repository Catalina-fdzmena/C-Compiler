Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    CONST
    DO
    DOT
    FALSE
    FOREACH
    MULTILINECOMMENT
    NEW
    NOT
    PRIVATE
    PUBLIC
    THEN
    TRUE
    VOID

Grammar

Rule 0     S' -> programstart
Rule 1     programstart -> PROGRAM ID LBRACE code RBRACE
Rule 2     code -> statement
Rule 3     code -> code statement
Rule 4     statement -> assignment STMT_TERMINATOR
Rule 5     statement -> declaration STMT_TERMINATOR
Rule 6     statement -> expression STMT_TERMINATOR
Rule 7     statement -> if_statement
Rule 8     statement -> while_statement
Rule 9     statement -> for_statement
Rule 10    statement -> array_declaration STMT_TERMINATOR
Rule 11    statement -> array_assignment STMT_TERMINATOR
Rule 12    statement -> write_statement
Rule 13    statement -> writeln_statement
Rule 14    statement -> break_statement
Rule 15    statement -> return_statement
Rule 16    declaration -> datatype declareid
Rule 17    declareid -> ID
Rule 18    declareid -> assignment
Rule 19    declareid -> declareid COMMA ID
Rule 20    declareid -> declareid COMMA assignment
Rule 21    assignment -> ID EQUAL expression
Rule 22    assignment -> ID PLUSEQUAL expression
Rule 23    assignment -> ID MINUSEQUAL expression
Rule 24    datatype -> INT
Rule 25    datatype -> FLOAT
Rule 26    datatype -> BOOL
Rule 27    datatype -> CHAR
Rule 28    datatype -> DOUBLE
Rule 29    datatype -> LONG
Rule 30    datatype -> STRING
Rule 31    expression -> expression PLUS term
Rule 32    expression -> expression MINUS term
Rule 33    expression -> term
Rule 34    term -> term MULT factor
Rule 35    term -> term DIVIDE factor
Rule 36    term -> term MOD factor
Rule 37    term -> factor
Rule 38    factor -> ID
Rule 39    factor -> INTCONST
Rule 40    factor -> FLOATCONST
Rule 41    factor -> DOUBLECONST
Rule 42    factor -> LONGCONST
Rule 43    factor -> BOOLCONST
Rule 44    factor -> STRCONST
Rule 45    factor -> CHARCONST
Rule 46    factor -> array_access
Rule 47    factor -> LPAREN expression RPAREN
Rule 48    expression -> expression LT expression
Rule 49    expression -> expression GT expression
Rule 50    expression -> expression LE expression
Rule 51    expression -> expression GE expression
Rule 52    expression -> expression NE expression
Rule 53    expression -> expression BOOLEQUAL expression
Rule 54    expression -> expression AND expression
Rule 55    expression -> expression OR expression
Rule 56    expression -> ID INCREMENT
Rule 57    expression -> ID DECREMENT
Rule 58    assignment -> ID INCREMENT STMT_TERMINATOR
Rule 59    assignment -> ID DECREMENT STMT_TERMINATOR
Rule 60    expression -> expression ARROW ID
Rule 61    if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE
Rule 62    if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE
Rule 63    while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE
Rule 64    for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE
Rule 65    arguments -> expression
Rule 66    arguments -> arguments COMMA expression
Rule 67    arguments -> empty
Rule 68    array_declaration -> datatype ID LBRACKET INTCONST RBRACKET
Rule 69    array_assignment -> ID LBRACKET expression RBRACKET EQUAL expression
Rule 70    array_access -> ID LBRACKET expression RBRACKET
Rule 71    write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR
Rule 72    writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR
Rule 73    break_statement -> BREAK STMT_TERMINATOR
Rule 74    return_statement -> RETURN expression STMT_TERMINATOR
Rule 75    return_statement -> RETURN STMT_TERMINATOR
Rule 76    empty -> <empty>

Terminals, with rules where they appear

AND                  : 54
ARROW                : 60
BOOL                 : 26
BOOLCONST            : 43
BOOLEQUAL            : 53
BREAK                : 73
CHAR                 : 27
CHARCONST            : 45
COLON                : 
COMMA                : 19 20 66
COMMENT              : 
CONST                : 
DECREMENT            : 57 59
DIVIDE               : 35
DO                   : 
DOT                  : 
DOUBLE               : 28
DOUBLECONST          : 41
ELSE                 : 62
EQUAL                : 21 69
FALSE                : 
FLOAT                : 25
FLOATCONST           : 40
FOR                  : 64
FOREACH              : 
GE                   : 51
GT                   : 49
ID                   : 1 17 19 21 22 23 38 56 57 58 59 60 68 69 70
IF                   : 61 62
INCREMENT            : 56 58
INT                  : 24
INTCONST             : 39 68
LBRACE               : 1 61 62 62 63 64
LBRACKET             : 68 69 70
LE                   : 50
LONG                 : 29
LONGCONST            : 42
LPAREN               : 47 61 62 63 64 71 72
LT                   : 48
MINUS                : 32
MINUSEQUAL           : 23
MOD                  : 36
MULT                 : 34
MULTILINECOMMENT     : 
NE                   : 52
NEW                  : 
NOT                  : 
OR                   : 55
PLUS                 : 31
PLUSEQUAL            : 22
PRIVATE              : 
PROGRAM              : 1
PUBLIC               : 
RBRACE               : 1 61 62 62 63 64
RBRACKET             : 68 69 70
RETURN               : 74 75
RPAREN               : 47 61 62 63 64 71 72
STMT_TERMINATOR      : 4 5 6 10 11 58 59 64 64 71 72 73 74 75
STRCONST             : 44
STRING               : 30
THEN                 : 
TRUE                 : 
VOID                 : 
WHILE                : 63
WRITE                : 71
WRITELN              : 72
error                : 

Nonterminals, with rules where they appear

arguments            : 66
array_access         : 46
array_assignment     : 11
array_declaration    : 10
assignment           : 4 18 20 64
break_statement      : 14
code                 : 1 3 61 62 62 63 64
datatype             : 16 68
declaration          : 5
declareid            : 16 19 20
empty                : 67
expression           : 6 21 22 23 31 32 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55 55 60 61 62 63 64 64 65 66 69 69 70 71 72 74
factor               : 34 35 36 37
for_statement        : 9
if_statement         : 7
programstart         : 0
return_statement     : 15
statement            : 2 3
term                 : 31 32 33 34 35 36
while_statement      : 8
write_statement      : 12
writeln_statement    : 13

Parsing method: LALR

state 0

    (0) S' -> . programstart
    (1) programstart -> . PROGRAM ID LBRACE code RBRACE

    PROGRAM         shift and go to state 2

    programstart                   shift and go to state 1

state 1

    (0) S' -> programstart .



state 2

    (1) programstart -> PROGRAM . ID LBRACE code RBRACE

    ID              shift and go to state 3


state 3

    (1) programstart -> PROGRAM ID . LBRACE code RBRACE

    LBRACE          shift and go to state 4


state 4

    (1) programstart -> PROGRAM ID LBRACE . code RBRACE
    (2) code -> . statement
    (3) code -> . code statement
    (4) statement -> . assignment STMT_TERMINATOR
    (5) statement -> . declaration STMT_TERMINATOR
    (6) statement -> . expression STMT_TERMINATOR
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . for_statement
    (10) statement -> . array_declaration STMT_TERMINATOR
    (11) statement -> . array_assignment STMT_TERMINATOR
    (12) statement -> . write_statement
    (13) statement -> . writeln_statement
    (14) statement -> . break_statement
    (15) statement -> . return_statement
    (21) assignment -> . ID EQUAL expression
    (22) assignment -> . ID PLUSEQUAL expression
    (23) assignment -> . ID MINUSEQUAL expression
    (58) assignment -> . ID INCREMENT STMT_TERMINATOR
    (59) assignment -> . ID DECREMENT STMT_TERMINATOR
    (16) declaration -> . datatype declareid
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (61) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE
    (62) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE
    (63) while_statement -> . WHILE LPAREN expression RPAREN LBRACE code RBRACE
    (64) for_statement -> . FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE
    (68) array_declaration -> . datatype ID LBRACKET INTCONST RBRACKET
    (69) array_assignment -> . ID LBRACKET expression RBRACKET EQUAL expression
    (71) write_statement -> . WRITE LPAREN expression RPAREN STMT_TERMINATOR
    (72) writeln_statement -> . WRITELN LPAREN expression RPAREN STMT_TERMINATOR
    (73) break_statement -> . BREAK STMT_TERMINATOR
    (74) return_statement -> . RETURN expression STMT_TERMINATOR
    (75) return_statement -> . RETURN STMT_TERMINATOR
    (24) datatype -> . INT
    (25) datatype -> . FLOAT
    (26) datatype -> . BOOL
    (27) datatype -> . CHAR
    (28) datatype -> . DOUBLE
    (29) datatype -> . LONG
    (30) datatype -> . STRING
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 5
    IF              shift and go to state 22
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    WRITE           shift and go to state 27
    WRITELN         shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    BOOL            shift and go to state 33
    CHAR            shift and go to state 34
    DOUBLE          shift and go to state 35
    LONG            shift and go to state 36
    STRING          shift and go to state 37
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    code                           shift and go to state 6
    statement                      shift and go to state 7
    assignment                     shift and go to state 8
    declaration                    shift and go to state 9
    expression                     shift and go to state 10
    if_statement                   shift and go to state 11
    while_statement                shift and go to state 12
    for_statement                  shift and go to state 13
    array_declaration              shift and go to state 14
    array_assignment               shift and go to state 15
    write_statement                shift and go to state 16
    writeln_statement              shift and go to state 17
    break_statement                shift and go to state 18
    return_statement               shift and go to state 19
    datatype                       shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 5

    (21) assignment -> ID . EQUAL expression
    (22) assignment -> ID . PLUSEQUAL expression
    (23) assignment -> ID . MINUSEQUAL expression
    (58) assignment -> ID . INCREMENT STMT_TERMINATOR
    (59) assignment -> ID . DECREMENT STMT_TERMINATOR
    (56) expression -> ID . INCREMENT
    (57) expression -> ID . DECREMENT
    (69) array_assignment -> ID . LBRACKET expression RBRACKET EQUAL expression
    (38) factor -> ID .
    (70) array_access -> ID . LBRACKET expression RBRACKET

    EQUAL           shift and go to state 46
    PLUSEQUAL       shift and go to state 47
    MINUSEQUAL      shift and go to state 48
    INCREMENT       shift and go to state 49
    DECREMENT       shift and go to state 50
    LBRACKET        shift and go to state 51
    MULT            reduce using rule 38 (factor -> ID .)
    DIVIDE          reduce using rule 38 (factor -> ID .)
    MOD             reduce using rule 38 (factor -> ID .)
    STMT_TERMINATOR reduce using rule 38 (factor -> ID .)
    PLUS            reduce using rule 38 (factor -> ID .)
    MINUS           reduce using rule 38 (factor -> ID .)
    LT              reduce using rule 38 (factor -> ID .)
    GT              reduce using rule 38 (factor -> ID .)
    LE              reduce using rule 38 (factor -> ID .)
    GE              reduce using rule 38 (factor -> ID .)
    NE              reduce using rule 38 (factor -> ID .)
    BOOLEQUAL       reduce using rule 38 (factor -> ID .)
    AND             reduce using rule 38 (factor -> ID .)
    OR              reduce using rule 38 (factor -> ID .)
    ARROW           reduce using rule 38 (factor -> ID .)


state 6

    (1) programstart -> PROGRAM ID LBRACE code . RBRACE
    (3) code -> code . statement
    (4) statement -> . assignment STMT_TERMINATOR
    (5) statement -> . declaration STMT_TERMINATOR
    (6) statement -> . expression STMT_TERMINATOR
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . for_statement
    (10) statement -> . array_declaration STMT_TERMINATOR
    (11) statement -> . array_assignment STMT_TERMINATOR
    (12) statement -> . write_statement
    (13) statement -> . writeln_statement
    (14) statement -> . break_statement
    (15) statement -> . return_statement
    (21) assignment -> . ID EQUAL expression
    (22) assignment -> . ID PLUSEQUAL expression
    (23) assignment -> . ID MINUSEQUAL expression
    (58) assignment -> . ID INCREMENT STMT_TERMINATOR
    (59) assignment -> . ID DECREMENT STMT_TERMINATOR
    (16) declaration -> . datatype declareid
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (61) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE
    (62) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE
    (63) while_statement -> . WHILE LPAREN expression RPAREN LBRACE code RBRACE
    (64) for_statement -> . FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE
    (68) array_declaration -> . datatype ID LBRACKET INTCONST RBRACKET
    (69) array_assignment -> . ID LBRACKET expression RBRACKET EQUAL expression
    (71) write_statement -> . WRITE LPAREN expression RPAREN STMT_TERMINATOR
    (72) writeln_statement -> . WRITELN LPAREN expression RPAREN STMT_TERMINATOR
    (73) break_statement -> . BREAK STMT_TERMINATOR
    (74) return_statement -> . RETURN expression STMT_TERMINATOR
    (75) return_statement -> . RETURN STMT_TERMINATOR
    (24) datatype -> . INT
    (25) datatype -> . FLOAT
    (26) datatype -> . BOOL
    (27) datatype -> . CHAR
    (28) datatype -> . DOUBLE
    (29) datatype -> . LONG
    (30) datatype -> . STRING
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    RBRACE          shift and go to state 52
    ID              shift and go to state 5
    IF              shift and go to state 22
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    WRITE           shift and go to state 27
    WRITELN         shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    BOOL            shift and go to state 33
    CHAR            shift and go to state 34
    DOUBLE          shift and go to state 35
    LONG            shift and go to state 36
    STRING          shift and go to state 37
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    statement                      shift and go to state 53
    assignment                     shift and go to state 8
    declaration                    shift and go to state 9
    expression                     shift and go to state 10
    if_statement                   shift and go to state 11
    while_statement                shift and go to state 12
    for_statement                  shift and go to state 13
    array_declaration              shift and go to state 14
    array_assignment               shift and go to state 15
    write_statement                shift and go to state 16
    writeln_statement              shift and go to state 17
    break_statement                shift and go to state 18
    return_statement               shift and go to state 19
    datatype                       shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 7

    (2) code -> statement .

    RBRACE          reduce using rule 2 (code -> statement .)
    ID              reduce using rule 2 (code -> statement .)
    IF              reduce using rule 2 (code -> statement .)
    WHILE           reduce using rule 2 (code -> statement .)
    FOR             reduce using rule 2 (code -> statement .)
    WRITE           reduce using rule 2 (code -> statement .)
    WRITELN         reduce using rule 2 (code -> statement .)
    BREAK           reduce using rule 2 (code -> statement .)
    RETURN          reduce using rule 2 (code -> statement .)
    INT             reduce using rule 2 (code -> statement .)
    FLOAT           reduce using rule 2 (code -> statement .)
    BOOL            reduce using rule 2 (code -> statement .)
    CHAR            reduce using rule 2 (code -> statement .)
    DOUBLE          reduce using rule 2 (code -> statement .)
    LONG            reduce using rule 2 (code -> statement .)
    STRING          reduce using rule 2 (code -> statement .)
    INTCONST        reduce using rule 2 (code -> statement .)
    FLOATCONST      reduce using rule 2 (code -> statement .)
    DOUBLECONST     reduce using rule 2 (code -> statement .)
    LONGCONST       reduce using rule 2 (code -> statement .)
    BOOLCONST       reduce using rule 2 (code -> statement .)
    STRCONST        reduce using rule 2 (code -> statement .)
    CHARCONST       reduce using rule 2 (code -> statement .)
    LPAREN          reduce using rule 2 (code -> statement .)


state 8

    (4) statement -> assignment . STMT_TERMINATOR

    STMT_TERMINATOR shift and go to state 54


state 9

    (5) statement -> declaration . STMT_TERMINATOR

    STMT_TERMINATOR shift and go to state 55


state 10

    (6) statement -> expression . STMT_TERMINATOR
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    STMT_TERMINATOR shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62
    NE              shift and go to state 63
    BOOLEQUAL       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    ARROW           shift and go to state 67


state 11

    (7) statement -> if_statement .

    RBRACE          reduce using rule 7 (statement -> if_statement .)
    ID              reduce using rule 7 (statement -> if_statement .)
    IF              reduce using rule 7 (statement -> if_statement .)
    WHILE           reduce using rule 7 (statement -> if_statement .)
    FOR             reduce using rule 7 (statement -> if_statement .)
    WRITE           reduce using rule 7 (statement -> if_statement .)
    WRITELN         reduce using rule 7 (statement -> if_statement .)
    BREAK           reduce using rule 7 (statement -> if_statement .)
    RETURN          reduce using rule 7 (statement -> if_statement .)
    INT             reduce using rule 7 (statement -> if_statement .)
    FLOAT           reduce using rule 7 (statement -> if_statement .)
    BOOL            reduce using rule 7 (statement -> if_statement .)
    CHAR            reduce using rule 7 (statement -> if_statement .)
    DOUBLE          reduce using rule 7 (statement -> if_statement .)
    LONG            reduce using rule 7 (statement -> if_statement .)
    STRING          reduce using rule 7 (statement -> if_statement .)
    INTCONST        reduce using rule 7 (statement -> if_statement .)
    FLOATCONST      reduce using rule 7 (statement -> if_statement .)
    DOUBLECONST     reduce using rule 7 (statement -> if_statement .)
    LONGCONST       reduce using rule 7 (statement -> if_statement .)
    BOOLCONST       reduce using rule 7 (statement -> if_statement .)
    STRCONST        reduce using rule 7 (statement -> if_statement .)
    CHARCONST       reduce using rule 7 (statement -> if_statement .)
    LPAREN          reduce using rule 7 (statement -> if_statement .)


state 12

    (8) statement -> while_statement .

    RBRACE          reduce using rule 8 (statement -> while_statement .)
    ID              reduce using rule 8 (statement -> while_statement .)
    IF              reduce using rule 8 (statement -> while_statement .)
    WHILE           reduce using rule 8 (statement -> while_statement .)
    FOR             reduce using rule 8 (statement -> while_statement .)
    WRITE           reduce using rule 8 (statement -> while_statement .)
    WRITELN         reduce using rule 8 (statement -> while_statement .)
    BREAK           reduce using rule 8 (statement -> while_statement .)
    RETURN          reduce using rule 8 (statement -> while_statement .)
    INT             reduce using rule 8 (statement -> while_statement .)
    FLOAT           reduce using rule 8 (statement -> while_statement .)
    BOOL            reduce using rule 8 (statement -> while_statement .)
    CHAR            reduce using rule 8 (statement -> while_statement .)
    DOUBLE          reduce using rule 8 (statement -> while_statement .)
    LONG            reduce using rule 8 (statement -> while_statement .)
    STRING          reduce using rule 8 (statement -> while_statement .)
    INTCONST        reduce using rule 8 (statement -> while_statement .)
    FLOATCONST      reduce using rule 8 (statement -> while_statement .)
    DOUBLECONST     reduce using rule 8 (statement -> while_statement .)
    LONGCONST       reduce using rule 8 (statement -> while_statement .)
    BOOLCONST       reduce using rule 8 (statement -> while_statement .)
    STRCONST        reduce using rule 8 (statement -> while_statement .)
    CHARCONST       reduce using rule 8 (statement -> while_statement .)
    LPAREN          reduce using rule 8 (statement -> while_statement .)


state 13

    (9) statement -> for_statement .

    RBRACE          reduce using rule 9 (statement -> for_statement .)
    ID              reduce using rule 9 (statement -> for_statement .)
    IF              reduce using rule 9 (statement -> for_statement .)
    WHILE           reduce using rule 9 (statement -> for_statement .)
    FOR             reduce using rule 9 (statement -> for_statement .)
    WRITE           reduce using rule 9 (statement -> for_statement .)
    WRITELN         reduce using rule 9 (statement -> for_statement .)
    BREAK           reduce using rule 9 (statement -> for_statement .)
    RETURN          reduce using rule 9 (statement -> for_statement .)
    INT             reduce using rule 9 (statement -> for_statement .)
    FLOAT           reduce using rule 9 (statement -> for_statement .)
    BOOL            reduce using rule 9 (statement -> for_statement .)
    CHAR            reduce using rule 9 (statement -> for_statement .)
    DOUBLE          reduce using rule 9 (statement -> for_statement .)
    LONG            reduce using rule 9 (statement -> for_statement .)
    STRING          reduce using rule 9 (statement -> for_statement .)
    INTCONST        reduce using rule 9 (statement -> for_statement .)
    FLOATCONST      reduce using rule 9 (statement -> for_statement .)
    DOUBLECONST     reduce using rule 9 (statement -> for_statement .)
    LONGCONST       reduce using rule 9 (statement -> for_statement .)
    BOOLCONST       reduce using rule 9 (statement -> for_statement .)
    STRCONST        reduce using rule 9 (statement -> for_statement .)
    CHARCONST       reduce using rule 9 (statement -> for_statement .)
    LPAREN          reduce using rule 9 (statement -> for_statement .)


state 14

    (10) statement -> array_declaration . STMT_TERMINATOR

    STMT_TERMINATOR shift and go to state 68


state 15

    (11) statement -> array_assignment . STMT_TERMINATOR

    STMT_TERMINATOR shift and go to state 69


state 16

    (12) statement -> write_statement .

    RBRACE          reduce using rule 12 (statement -> write_statement .)
    ID              reduce using rule 12 (statement -> write_statement .)
    IF              reduce using rule 12 (statement -> write_statement .)
    WHILE           reduce using rule 12 (statement -> write_statement .)
    FOR             reduce using rule 12 (statement -> write_statement .)
    WRITE           reduce using rule 12 (statement -> write_statement .)
    WRITELN         reduce using rule 12 (statement -> write_statement .)
    BREAK           reduce using rule 12 (statement -> write_statement .)
    RETURN          reduce using rule 12 (statement -> write_statement .)
    INT             reduce using rule 12 (statement -> write_statement .)
    FLOAT           reduce using rule 12 (statement -> write_statement .)
    BOOL            reduce using rule 12 (statement -> write_statement .)
    CHAR            reduce using rule 12 (statement -> write_statement .)
    DOUBLE          reduce using rule 12 (statement -> write_statement .)
    LONG            reduce using rule 12 (statement -> write_statement .)
    STRING          reduce using rule 12 (statement -> write_statement .)
    INTCONST        reduce using rule 12 (statement -> write_statement .)
    FLOATCONST      reduce using rule 12 (statement -> write_statement .)
    DOUBLECONST     reduce using rule 12 (statement -> write_statement .)
    LONGCONST       reduce using rule 12 (statement -> write_statement .)
    BOOLCONST       reduce using rule 12 (statement -> write_statement .)
    STRCONST        reduce using rule 12 (statement -> write_statement .)
    CHARCONST       reduce using rule 12 (statement -> write_statement .)
    LPAREN          reduce using rule 12 (statement -> write_statement .)


state 17

    (13) statement -> writeln_statement .

    RBRACE          reduce using rule 13 (statement -> writeln_statement .)
    ID              reduce using rule 13 (statement -> writeln_statement .)
    IF              reduce using rule 13 (statement -> writeln_statement .)
    WHILE           reduce using rule 13 (statement -> writeln_statement .)
    FOR             reduce using rule 13 (statement -> writeln_statement .)
    WRITE           reduce using rule 13 (statement -> writeln_statement .)
    WRITELN         reduce using rule 13 (statement -> writeln_statement .)
    BREAK           reduce using rule 13 (statement -> writeln_statement .)
    RETURN          reduce using rule 13 (statement -> writeln_statement .)
    INT             reduce using rule 13 (statement -> writeln_statement .)
    FLOAT           reduce using rule 13 (statement -> writeln_statement .)
    BOOL            reduce using rule 13 (statement -> writeln_statement .)
    CHAR            reduce using rule 13 (statement -> writeln_statement .)
    DOUBLE          reduce using rule 13 (statement -> writeln_statement .)
    LONG            reduce using rule 13 (statement -> writeln_statement .)
    STRING          reduce using rule 13 (statement -> writeln_statement .)
    INTCONST        reduce using rule 13 (statement -> writeln_statement .)
    FLOATCONST      reduce using rule 13 (statement -> writeln_statement .)
    DOUBLECONST     reduce using rule 13 (statement -> writeln_statement .)
    LONGCONST       reduce using rule 13 (statement -> writeln_statement .)
    BOOLCONST       reduce using rule 13 (statement -> writeln_statement .)
    STRCONST        reduce using rule 13 (statement -> writeln_statement .)
    CHARCONST       reduce using rule 13 (statement -> writeln_statement .)
    LPAREN          reduce using rule 13 (statement -> writeln_statement .)


state 18

    (14) statement -> break_statement .

    RBRACE          reduce using rule 14 (statement -> break_statement .)
    ID              reduce using rule 14 (statement -> break_statement .)
    IF              reduce using rule 14 (statement -> break_statement .)
    WHILE           reduce using rule 14 (statement -> break_statement .)
    FOR             reduce using rule 14 (statement -> break_statement .)
    WRITE           reduce using rule 14 (statement -> break_statement .)
    WRITELN         reduce using rule 14 (statement -> break_statement .)
    BREAK           reduce using rule 14 (statement -> break_statement .)
    RETURN          reduce using rule 14 (statement -> break_statement .)
    INT             reduce using rule 14 (statement -> break_statement .)
    FLOAT           reduce using rule 14 (statement -> break_statement .)
    BOOL            reduce using rule 14 (statement -> break_statement .)
    CHAR            reduce using rule 14 (statement -> break_statement .)
    DOUBLE          reduce using rule 14 (statement -> break_statement .)
    LONG            reduce using rule 14 (statement -> break_statement .)
    STRING          reduce using rule 14 (statement -> break_statement .)
    INTCONST        reduce using rule 14 (statement -> break_statement .)
    FLOATCONST      reduce using rule 14 (statement -> break_statement .)
    DOUBLECONST     reduce using rule 14 (statement -> break_statement .)
    LONGCONST       reduce using rule 14 (statement -> break_statement .)
    BOOLCONST       reduce using rule 14 (statement -> break_statement .)
    STRCONST        reduce using rule 14 (statement -> break_statement .)
    CHARCONST       reduce using rule 14 (statement -> break_statement .)
    LPAREN          reduce using rule 14 (statement -> break_statement .)


state 19

    (15) statement -> return_statement .

    RBRACE          reduce using rule 15 (statement -> return_statement .)
    ID              reduce using rule 15 (statement -> return_statement .)
    IF              reduce using rule 15 (statement -> return_statement .)
    WHILE           reduce using rule 15 (statement -> return_statement .)
    FOR             reduce using rule 15 (statement -> return_statement .)
    WRITE           reduce using rule 15 (statement -> return_statement .)
    WRITELN         reduce using rule 15 (statement -> return_statement .)
    BREAK           reduce using rule 15 (statement -> return_statement .)
    RETURN          reduce using rule 15 (statement -> return_statement .)
    INT             reduce using rule 15 (statement -> return_statement .)
    FLOAT           reduce using rule 15 (statement -> return_statement .)
    BOOL            reduce using rule 15 (statement -> return_statement .)
    CHAR            reduce using rule 15 (statement -> return_statement .)
    DOUBLE          reduce using rule 15 (statement -> return_statement .)
    LONG            reduce using rule 15 (statement -> return_statement .)
    STRING          reduce using rule 15 (statement -> return_statement .)
    INTCONST        reduce using rule 15 (statement -> return_statement .)
    FLOATCONST      reduce using rule 15 (statement -> return_statement .)
    DOUBLECONST     reduce using rule 15 (statement -> return_statement .)
    LONGCONST       reduce using rule 15 (statement -> return_statement .)
    BOOLCONST       reduce using rule 15 (statement -> return_statement .)
    STRCONST        reduce using rule 15 (statement -> return_statement .)
    CHARCONST       reduce using rule 15 (statement -> return_statement .)
    LPAREN          reduce using rule 15 (statement -> return_statement .)


state 20

    (16) declaration -> datatype . declareid
    (68) array_declaration -> datatype . ID LBRACKET INTCONST RBRACKET
    (17) declareid -> . ID
    (18) declareid -> . assignment
    (19) declareid -> . declareid COMMA ID
    (20) declareid -> . declareid COMMA assignment
    (21) assignment -> . ID EQUAL expression
    (22) assignment -> . ID PLUSEQUAL expression
    (23) assignment -> . ID MINUSEQUAL expression
    (58) assignment -> . ID INCREMENT STMT_TERMINATOR
    (59) assignment -> . ID DECREMENT STMT_TERMINATOR

    ID              shift and go to state 71

    declareid                      shift and go to state 70
    assignment                     shift and go to state 72

state 21

    (33) expression -> term .
    (34) term -> term . MULT factor
    (35) term -> term . DIVIDE factor
    (36) term -> term . MOD factor

    STMT_TERMINATOR reduce using rule 33 (expression -> term .)
    PLUS            reduce using rule 33 (expression -> term .)
    MINUS           reduce using rule 33 (expression -> term .)
    LT              reduce using rule 33 (expression -> term .)
    GT              reduce using rule 33 (expression -> term .)
    LE              reduce using rule 33 (expression -> term .)
    GE              reduce using rule 33 (expression -> term .)
    NE              reduce using rule 33 (expression -> term .)
    BOOLEQUAL       reduce using rule 33 (expression -> term .)
    AND             reduce using rule 33 (expression -> term .)
    OR              reduce using rule 33 (expression -> term .)
    ARROW           reduce using rule 33 (expression -> term .)
    RPAREN          reduce using rule 33 (expression -> term .)
    COMMA           reduce using rule 33 (expression -> term .)
    RBRACKET        reduce using rule 33 (expression -> term .)
    MULT            shift and go to state 73
    DIVIDE          shift and go to state 74
    MOD             shift and go to state 75


state 22

    (61) if_statement -> IF . LPAREN expression RPAREN LBRACE code RBRACE
    (62) if_statement -> IF . LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE

    LPAREN          shift and go to state 76


state 23

    (47) factor -> LPAREN . expression RPAREN
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 77
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 24

    (63) while_statement -> WHILE . LPAREN expression RPAREN LBRACE code RBRACE

    LPAREN          shift and go to state 79


state 25

    (64) for_statement -> FOR . LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE

    LPAREN          shift and go to state 80


state 26

    (39) factor -> INTCONST .

    MULT            reduce using rule 39 (factor -> INTCONST .)
    DIVIDE          reduce using rule 39 (factor -> INTCONST .)
    MOD             reduce using rule 39 (factor -> INTCONST .)
    STMT_TERMINATOR reduce using rule 39 (factor -> INTCONST .)
    PLUS            reduce using rule 39 (factor -> INTCONST .)
    MINUS           reduce using rule 39 (factor -> INTCONST .)
    LT              reduce using rule 39 (factor -> INTCONST .)
    GT              reduce using rule 39 (factor -> INTCONST .)
    LE              reduce using rule 39 (factor -> INTCONST .)
    GE              reduce using rule 39 (factor -> INTCONST .)
    NE              reduce using rule 39 (factor -> INTCONST .)
    BOOLEQUAL       reduce using rule 39 (factor -> INTCONST .)
    AND             reduce using rule 39 (factor -> INTCONST .)
    OR              reduce using rule 39 (factor -> INTCONST .)
    ARROW           reduce using rule 39 (factor -> INTCONST .)
    RPAREN          reduce using rule 39 (factor -> INTCONST .)
    COMMA           reduce using rule 39 (factor -> INTCONST .)
    RBRACKET        reduce using rule 39 (factor -> INTCONST .)


state 27

    (71) write_statement -> WRITE . LPAREN expression RPAREN STMT_TERMINATOR

    LPAREN          shift and go to state 81


state 28

    (72) writeln_statement -> WRITELN . LPAREN expression RPAREN STMT_TERMINATOR

    LPAREN          shift and go to state 82


state 29

    (73) break_statement -> BREAK . STMT_TERMINATOR

    STMT_TERMINATOR shift and go to state 83


state 30

    (74) return_statement -> RETURN . expression STMT_TERMINATOR
    (75) return_statement -> RETURN . STMT_TERMINATOR
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    STMT_TERMINATOR shift and go to state 85
    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 84
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 31

    (24) datatype -> INT .

    ID              reduce using rule 24 (datatype -> INT .)


state 32

    (25) datatype -> FLOAT .

    ID              reduce using rule 25 (datatype -> FLOAT .)


state 33

    (26) datatype -> BOOL .

    ID              reduce using rule 26 (datatype -> BOOL .)


state 34

    (27) datatype -> CHAR .

    ID              reduce using rule 27 (datatype -> CHAR .)


state 35

    (28) datatype -> DOUBLE .

    ID              reduce using rule 28 (datatype -> DOUBLE .)


state 36

    (29) datatype -> LONG .

    ID              reduce using rule 29 (datatype -> LONG .)


state 37

    (30) datatype -> STRING .

    ID              reduce using rule 30 (datatype -> STRING .)


state 38

    (37) term -> factor .

    MULT            reduce using rule 37 (term -> factor .)
    DIVIDE          reduce using rule 37 (term -> factor .)
    MOD             reduce using rule 37 (term -> factor .)
    STMT_TERMINATOR reduce using rule 37 (term -> factor .)
    PLUS            reduce using rule 37 (term -> factor .)
    MINUS           reduce using rule 37 (term -> factor .)
    LT              reduce using rule 37 (term -> factor .)
    GT              reduce using rule 37 (term -> factor .)
    LE              reduce using rule 37 (term -> factor .)
    GE              reduce using rule 37 (term -> factor .)
    NE              reduce using rule 37 (term -> factor .)
    BOOLEQUAL       reduce using rule 37 (term -> factor .)
    AND             reduce using rule 37 (term -> factor .)
    OR              reduce using rule 37 (term -> factor .)
    ARROW           reduce using rule 37 (term -> factor .)
    RPAREN          reduce using rule 37 (term -> factor .)
    COMMA           reduce using rule 37 (term -> factor .)
    RBRACKET        reduce using rule 37 (term -> factor .)


state 39

    (40) factor -> FLOATCONST .

    MULT            reduce using rule 40 (factor -> FLOATCONST .)
    DIVIDE          reduce using rule 40 (factor -> FLOATCONST .)
    MOD             reduce using rule 40 (factor -> FLOATCONST .)
    STMT_TERMINATOR reduce using rule 40 (factor -> FLOATCONST .)
    PLUS            reduce using rule 40 (factor -> FLOATCONST .)
    MINUS           reduce using rule 40 (factor -> FLOATCONST .)
    LT              reduce using rule 40 (factor -> FLOATCONST .)
    GT              reduce using rule 40 (factor -> FLOATCONST .)
    LE              reduce using rule 40 (factor -> FLOATCONST .)
    GE              reduce using rule 40 (factor -> FLOATCONST .)
    NE              reduce using rule 40 (factor -> FLOATCONST .)
    BOOLEQUAL       reduce using rule 40 (factor -> FLOATCONST .)
    AND             reduce using rule 40 (factor -> FLOATCONST .)
    OR              reduce using rule 40 (factor -> FLOATCONST .)
    ARROW           reduce using rule 40 (factor -> FLOATCONST .)
    RPAREN          reduce using rule 40 (factor -> FLOATCONST .)
    COMMA           reduce using rule 40 (factor -> FLOATCONST .)
    RBRACKET        reduce using rule 40 (factor -> FLOATCONST .)


state 40

    (41) factor -> DOUBLECONST .

    MULT            reduce using rule 41 (factor -> DOUBLECONST .)
    DIVIDE          reduce using rule 41 (factor -> DOUBLECONST .)
    MOD             reduce using rule 41 (factor -> DOUBLECONST .)
    STMT_TERMINATOR reduce using rule 41 (factor -> DOUBLECONST .)
    PLUS            reduce using rule 41 (factor -> DOUBLECONST .)
    MINUS           reduce using rule 41 (factor -> DOUBLECONST .)
    LT              reduce using rule 41 (factor -> DOUBLECONST .)
    GT              reduce using rule 41 (factor -> DOUBLECONST .)
    LE              reduce using rule 41 (factor -> DOUBLECONST .)
    GE              reduce using rule 41 (factor -> DOUBLECONST .)
    NE              reduce using rule 41 (factor -> DOUBLECONST .)
    BOOLEQUAL       reduce using rule 41 (factor -> DOUBLECONST .)
    AND             reduce using rule 41 (factor -> DOUBLECONST .)
    OR              reduce using rule 41 (factor -> DOUBLECONST .)
    ARROW           reduce using rule 41 (factor -> DOUBLECONST .)
    RPAREN          reduce using rule 41 (factor -> DOUBLECONST .)
    COMMA           reduce using rule 41 (factor -> DOUBLECONST .)
    RBRACKET        reduce using rule 41 (factor -> DOUBLECONST .)


state 41

    (42) factor -> LONGCONST .

    MULT            reduce using rule 42 (factor -> LONGCONST .)
    DIVIDE          reduce using rule 42 (factor -> LONGCONST .)
    MOD             reduce using rule 42 (factor -> LONGCONST .)
    STMT_TERMINATOR reduce using rule 42 (factor -> LONGCONST .)
    PLUS            reduce using rule 42 (factor -> LONGCONST .)
    MINUS           reduce using rule 42 (factor -> LONGCONST .)
    LT              reduce using rule 42 (factor -> LONGCONST .)
    GT              reduce using rule 42 (factor -> LONGCONST .)
    LE              reduce using rule 42 (factor -> LONGCONST .)
    GE              reduce using rule 42 (factor -> LONGCONST .)
    NE              reduce using rule 42 (factor -> LONGCONST .)
    BOOLEQUAL       reduce using rule 42 (factor -> LONGCONST .)
    AND             reduce using rule 42 (factor -> LONGCONST .)
    OR              reduce using rule 42 (factor -> LONGCONST .)
    ARROW           reduce using rule 42 (factor -> LONGCONST .)
    RPAREN          reduce using rule 42 (factor -> LONGCONST .)
    COMMA           reduce using rule 42 (factor -> LONGCONST .)
    RBRACKET        reduce using rule 42 (factor -> LONGCONST .)


state 42

    (43) factor -> BOOLCONST .

    MULT            reduce using rule 43 (factor -> BOOLCONST .)
    DIVIDE          reduce using rule 43 (factor -> BOOLCONST .)
    MOD             reduce using rule 43 (factor -> BOOLCONST .)
    STMT_TERMINATOR reduce using rule 43 (factor -> BOOLCONST .)
    PLUS            reduce using rule 43 (factor -> BOOLCONST .)
    MINUS           reduce using rule 43 (factor -> BOOLCONST .)
    LT              reduce using rule 43 (factor -> BOOLCONST .)
    GT              reduce using rule 43 (factor -> BOOLCONST .)
    LE              reduce using rule 43 (factor -> BOOLCONST .)
    GE              reduce using rule 43 (factor -> BOOLCONST .)
    NE              reduce using rule 43 (factor -> BOOLCONST .)
    BOOLEQUAL       reduce using rule 43 (factor -> BOOLCONST .)
    AND             reduce using rule 43 (factor -> BOOLCONST .)
    OR              reduce using rule 43 (factor -> BOOLCONST .)
    ARROW           reduce using rule 43 (factor -> BOOLCONST .)
    RPAREN          reduce using rule 43 (factor -> BOOLCONST .)
    COMMA           reduce using rule 43 (factor -> BOOLCONST .)
    RBRACKET        reduce using rule 43 (factor -> BOOLCONST .)


state 43

    (44) factor -> STRCONST .

    MULT            reduce using rule 44 (factor -> STRCONST .)
    DIVIDE          reduce using rule 44 (factor -> STRCONST .)
    MOD             reduce using rule 44 (factor -> STRCONST .)
    STMT_TERMINATOR reduce using rule 44 (factor -> STRCONST .)
    PLUS            reduce using rule 44 (factor -> STRCONST .)
    MINUS           reduce using rule 44 (factor -> STRCONST .)
    LT              reduce using rule 44 (factor -> STRCONST .)
    GT              reduce using rule 44 (factor -> STRCONST .)
    LE              reduce using rule 44 (factor -> STRCONST .)
    GE              reduce using rule 44 (factor -> STRCONST .)
    NE              reduce using rule 44 (factor -> STRCONST .)
    BOOLEQUAL       reduce using rule 44 (factor -> STRCONST .)
    AND             reduce using rule 44 (factor -> STRCONST .)
    OR              reduce using rule 44 (factor -> STRCONST .)
    ARROW           reduce using rule 44 (factor -> STRCONST .)
    RPAREN          reduce using rule 44 (factor -> STRCONST .)
    COMMA           reduce using rule 44 (factor -> STRCONST .)
    RBRACKET        reduce using rule 44 (factor -> STRCONST .)


state 44

    (45) factor -> CHARCONST .

    MULT            reduce using rule 45 (factor -> CHARCONST .)
    DIVIDE          reduce using rule 45 (factor -> CHARCONST .)
    MOD             reduce using rule 45 (factor -> CHARCONST .)
    STMT_TERMINATOR reduce using rule 45 (factor -> CHARCONST .)
    PLUS            reduce using rule 45 (factor -> CHARCONST .)
    MINUS           reduce using rule 45 (factor -> CHARCONST .)
    LT              reduce using rule 45 (factor -> CHARCONST .)
    GT              reduce using rule 45 (factor -> CHARCONST .)
    LE              reduce using rule 45 (factor -> CHARCONST .)
    GE              reduce using rule 45 (factor -> CHARCONST .)
    NE              reduce using rule 45 (factor -> CHARCONST .)
    BOOLEQUAL       reduce using rule 45 (factor -> CHARCONST .)
    AND             reduce using rule 45 (factor -> CHARCONST .)
    OR              reduce using rule 45 (factor -> CHARCONST .)
    ARROW           reduce using rule 45 (factor -> CHARCONST .)
    RPAREN          reduce using rule 45 (factor -> CHARCONST .)
    COMMA           reduce using rule 45 (factor -> CHARCONST .)
    RBRACKET        reduce using rule 45 (factor -> CHARCONST .)


state 45

    (46) factor -> array_access .

    MULT            reduce using rule 46 (factor -> array_access .)
    DIVIDE          reduce using rule 46 (factor -> array_access .)
    MOD             reduce using rule 46 (factor -> array_access .)
    STMT_TERMINATOR reduce using rule 46 (factor -> array_access .)
    PLUS            reduce using rule 46 (factor -> array_access .)
    MINUS           reduce using rule 46 (factor -> array_access .)
    LT              reduce using rule 46 (factor -> array_access .)
    GT              reduce using rule 46 (factor -> array_access .)
    LE              reduce using rule 46 (factor -> array_access .)
    GE              reduce using rule 46 (factor -> array_access .)
    NE              reduce using rule 46 (factor -> array_access .)
    BOOLEQUAL       reduce using rule 46 (factor -> array_access .)
    AND             reduce using rule 46 (factor -> array_access .)
    OR              reduce using rule 46 (factor -> array_access .)
    ARROW           reduce using rule 46 (factor -> array_access .)
    RPAREN          reduce using rule 46 (factor -> array_access .)
    COMMA           reduce using rule 46 (factor -> array_access .)
    RBRACKET        reduce using rule 46 (factor -> array_access .)


state 46

    (21) assignment -> ID EQUAL . expression
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 86
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 47

    (22) assignment -> ID PLUSEQUAL . expression
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 87
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 48

    (23) assignment -> ID MINUSEQUAL . expression
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 88
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 49

    (58) assignment -> ID INCREMENT . STMT_TERMINATOR
    (56) expression -> ID INCREMENT .

    STMT_TERMINATOR reduce using rule 56 (expression -> ID INCREMENT .)
    PLUS            reduce using rule 56 (expression -> ID INCREMENT .)
    MINUS           reduce using rule 56 (expression -> ID INCREMENT .)
    LT              reduce using rule 56 (expression -> ID INCREMENT .)
    GT              reduce using rule 56 (expression -> ID INCREMENT .)
    LE              reduce using rule 56 (expression -> ID INCREMENT .)
    GE              reduce using rule 56 (expression -> ID INCREMENT .)
    NE              reduce using rule 56 (expression -> ID INCREMENT .)
    BOOLEQUAL       reduce using rule 56 (expression -> ID INCREMENT .)
    AND             reduce using rule 56 (expression -> ID INCREMENT .)
    OR              reduce using rule 56 (expression -> ID INCREMENT .)
    ARROW           reduce using rule 56 (expression -> ID INCREMENT .)

  ! STMT_TERMINATOR [ shift and go to state 89 ]


state 50

    (59) assignment -> ID DECREMENT . STMT_TERMINATOR
    (57) expression -> ID DECREMENT .

    STMT_TERMINATOR reduce using rule 57 (expression -> ID DECREMENT .)
    PLUS            reduce using rule 57 (expression -> ID DECREMENT .)
    MINUS           reduce using rule 57 (expression -> ID DECREMENT .)
    LT              reduce using rule 57 (expression -> ID DECREMENT .)
    GT              reduce using rule 57 (expression -> ID DECREMENT .)
    LE              reduce using rule 57 (expression -> ID DECREMENT .)
    GE              reduce using rule 57 (expression -> ID DECREMENT .)
    NE              reduce using rule 57 (expression -> ID DECREMENT .)
    BOOLEQUAL       reduce using rule 57 (expression -> ID DECREMENT .)
    AND             reduce using rule 57 (expression -> ID DECREMENT .)
    OR              reduce using rule 57 (expression -> ID DECREMENT .)
    ARROW           reduce using rule 57 (expression -> ID DECREMENT .)

  ! STMT_TERMINATOR [ shift and go to state 90 ]


state 51

    (69) array_assignment -> ID LBRACKET . expression RBRACKET EQUAL expression
    (70) array_access -> ID LBRACKET . expression RBRACKET
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 91
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 52

    (1) programstart -> PROGRAM ID LBRACE code RBRACE .

    $end            reduce using rule 1 (programstart -> PROGRAM ID LBRACE code RBRACE .)


state 53

    (3) code -> code statement .

    RBRACE          reduce using rule 3 (code -> code statement .)
    ID              reduce using rule 3 (code -> code statement .)
    IF              reduce using rule 3 (code -> code statement .)
    WHILE           reduce using rule 3 (code -> code statement .)
    FOR             reduce using rule 3 (code -> code statement .)
    WRITE           reduce using rule 3 (code -> code statement .)
    WRITELN         reduce using rule 3 (code -> code statement .)
    BREAK           reduce using rule 3 (code -> code statement .)
    RETURN          reduce using rule 3 (code -> code statement .)
    INT             reduce using rule 3 (code -> code statement .)
    FLOAT           reduce using rule 3 (code -> code statement .)
    BOOL            reduce using rule 3 (code -> code statement .)
    CHAR            reduce using rule 3 (code -> code statement .)
    DOUBLE          reduce using rule 3 (code -> code statement .)
    LONG            reduce using rule 3 (code -> code statement .)
    STRING          reduce using rule 3 (code -> code statement .)
    INTCONST        reduce using rule 3 (code -> code statement .)
    FLOATCONST      reduce using rule 3 (code -> code statement .)
    DOUBLECONST     reduce using rule 3 (code -> code statement .)
    LONGCONST       reduce using rule 3 (code -> code statement .)
    BOOLCONST       reduce using rule 3 (code -> code statement .)
    STRCONST        reduce using rule 3 (code -> code statement .)
    CHARCONST       reduce using rule 3 (code -> code statement .)
    LPAREN          reduce using rule 3 (code -> code statement .)


state 54

    (4) statement -> assignment STMT_TERMINATOR .

    RBRACE          reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    ID              reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    IF              reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    WHILE           reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    FOR             reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    WRITE           reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    WRITELN         reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    BREAK           reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    RETURN          reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    INT             reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    FLOAT           reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    BOOL            reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    CHAR            reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    DOUBLE          reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    LONG            reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    STRING          reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    INTCONST        reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    FLOATCONST      reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    DOUBLECONST     reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    LONGCONST       reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    BOOLCONST       reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    STRCONST        reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    CHARCONST       reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)
    LPAREN          reduce using rule 4 (statement -> assignment STMT_TERMINATOR .)


state 55

    (5) statement -> declaration STMT_TERMINATOR .

    RBRACE          reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    ID              reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    IF              reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    WHILE           reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    FOR             reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    WRITE           reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    WRITELN         reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    BREAK           reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    RETURN          reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    INT             reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    FLOAT           reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    BOOL            reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    CHAR            reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    DOUBLE          reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    LONG            reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    STRING          reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    INTCONST        reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    FLOATCONST      reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    DOUBLECONST     reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    LONGCONST       reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    BOOLCONST       reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    STRCONST        reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    CHARCONST       reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)
    LPAREN          reduce using rule 5 (statement -> declaration STMT_TERMINATOR .)


state 56

    (6) statement -> expression STMT_TERMINATOR .

    RBRACE          reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    ID              reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    IF              reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    WHILE           reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    FOR             reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    WRITE           reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    WRITELN         reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    BREAK           reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    RETURN          reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    INT             reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    FLOAT           reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    BOOL            reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    CHAR            reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    DOUBLE          reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    LONG            reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    STRING          reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    INTCONST        reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    FLOATCONST      reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    DOUBLECONST     reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    LONGCONST       reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    BOOLCONST       reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    STRCONST        reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    CHARCONST       reduce using rule 6 (statement -> expression STMT_TERMINATOR .)
    LPAREN          reduce using rule 6 (statement -> expression STMT_TERMINATOR .)


state 57

    (31) expression -> expression PLUS . term
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 93
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    term                           shift and go to state 92
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 58

    (32) expression -> expression MINUS . term
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 93
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    term                           shift and go to state 94
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 59

    (48) expression -> expression LT . expression
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 95
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 60

    (49) expression -> expression GT . expression
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 96
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 61

    (50) expression -> expression LE . expression
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 97
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 62

    (51) expression -> expression GE . expression
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 98
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 63

    (52) expression -> expression NE . expression
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 99
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 64

    (53) expression -> expression BOOLEQUAL . expression
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 100
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 65

    (54) expression -> expression AND . expression
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 101
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 66

    (55) expression -> expression OR . expression
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 102
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 67

    (60) expression -> expression ARROW . ID

    ID              shift and go to state 103


state 68

    (10) statement -> array_declaration STMT_TERMINATOR .

    RBRACE          reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    ID              reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    IF              reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    WHILE           reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    FOR             reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    WRITE           reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    WRITELN         reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    BREAK           reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    RETURN          reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    INT             reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    FLOAT           reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    BOOL            reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    CHAR            reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    DOUBLE          reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    LONG            reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    STRING          reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    INTCONST        reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    FLOATCONST      reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    DOUBLECONST     reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    LONGCONST       reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    BOOLCONST       reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    STRCONST        reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    CHARCONST       reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)
    LPAREN          reduce using rule 10 (statement -> array_declaration STMT_TERMINATOR .)


state 69

    (11) statement -> array_assignment STMT_TERMINATOR .

    RBRACE          reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    ID              reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    IF              reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    WHILE           reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    FOR             reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    WRITE           reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    WRITELN         reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    BREAK           reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    RETURN          reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    INT             reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    FLOAT           reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    BOOL            reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    CHAR            reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    DOUBLE          reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    LONG            reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    STRING          reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    INTCONST        reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    FLOATCONST      reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    DOUBLECONST     reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    LONGCONST       reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    BOOLCONST       reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    STRCONST        reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    CHARCONST       reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)
    LPAREN          reduce using rule 11 (statement -> array_assignment STMT_TERMINATOR .)


state 70

    (16) declaration -> datatype declareid .
    (19) declareid -> declareid . COMMA ID
    (20) declareid -> declareid . COMMA assignment

    STMT_TERMINATOR reduce using rule 16 (declaration -> datatype declareid .)
    COMMA           shift and go to state 104


state 71

    (68) array_declaration -> datatype ID . LBRACKET INTCONST RBRACKET
    (17) declareid -> ID .
    (21) assignment -> ID . EQUAL expression
    (22) assignment -> ID . PLUSEQUAL expression
    (23) assignment -> ID . MINUSEQUAL expression
    (58) assignment -> ID . INCREMENT STMT_TERMINATOR
    (59) assignment -> ID . DECREMENT STMT_TERMINATOR

    LBRACKET        shift and go to state 105
    COMMA           reduce using rule 17 (declareid -> ID .)
    STMT_TERMINATOR reduce using rule 17 (declareid -> ID .)
    EQUAL           shift and go to state 46
    PLUSEQUAL       shift and go to state 47
    MINUSEQUAL      shift and go to state 48
    INCREMENT       shift and go to state 106
    DECREMENT       shift and go to state 107


state 72

    (18) declareid -> assignment .

    COMMA           reduce using rule 18 (declareid -> assignment .)
    STMT_TERMINATOR reduce using rule 18 (declareid -> assignment .)


state 73

    (34) term -> term MULT . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 93
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    factor                         shift and go to state 108
    array_access                   shift and go to state 45

state 74

    (35) term -> term DIVIDE . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 93
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    factor                         shift and go to state 109
    array_access                   shift and go to state 45

state 75

    (36) term -> term MOD . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 93
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    factor                         shift and go to state 110
    array_access                   shift and go to state 45

state 76

    (61) if_statement -> IF LPAREN . expression RPAREN LBRACE code RBRACE
    (62) if_statement -> IF LPAREN . expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 111
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 77

    (47) factor -> LPAREN expression . RPAREN
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    RPAREN          shift and go to state 112
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62
    NE              shift and go to state 63
    BOOLEQUAL       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    ARROW           shift and go to state 67


state 78

    (56) expression -> ID . INCREMENT
    (57) expression -> ID . DECREMENT
    (38) factor -> ID .
    (70) array_access -> ID . LBRACKET expression RBRACKET

    INCREMENT       shift and go to state 113
    DECREMENT       shift and go to state 114
    MULT            reduce using rule 38 (factor -> ID .)
    DIVIDE          reduce using rule 38 (factor -> ID .)
    MOD             reduce using rule 38 (factor -> ID .)
    RPAREN          reduce using rule 38 (factor -> ID .)
    PLUS            reduce using rule 38 (factor -> ID .)
    MINUS           reduce using rule 38 (factor -> ID .)
    LT              reduce using rule 38 (factor -> ID .)
    GT              reduce using rule 38 (factor -> ID .)
    LE              reduce using rule 38 (factor -> ID .)
    GE              reduce using rule 38 (factor -> ID .)
    NE              reduce using rule 38 (factor -> ID .)
    BOOLEQUAL       reduce using rule 38 (factor -> ID .)
    AND             reduce using rule 38 (factor -> ID .)
    OR              reduce using rule 38 (factor -> ID .)
    ARROW           reduce using rule 38 (factor -> ID .)
    STMT_TERMINATOR reduce using rule 38 (factor -> ID .)
    COMMA           reduce using rule 38 (factor -> ID .)
    RBRACKET        reduce using rule 38 (factor -> ID .)
    LBRACKET        shift and go to state 115


state 79

    (63) while_statement -> WHILE LPAREN . expression RPAREN LBRACE code RBRACE
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 116
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 80

    (64) for_statement -> FOR LPAREN . assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE
    (21) assignment -> . ID EQUAL expression
    (22) assignment -> . ID PLUSEQUAL expression
    (23) assignment -> . ID MINUSEQUAL expression
    (58) assignment -> . ID INCREMENT STMT_TERMINATOR
    (59) assignment -> . ID DECREMENT STMT_TERMINATOR

    ID              shift and go to state 118

    assignment                     shift and go to state 117

state 81

    (71) write_statement -> WRITE LPAREN . expression RPAREN STMT_TERMINATOR
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 119
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 82

    (72) writeln_statement -> WRITELN LPAREN . expression RPAREN STMT_TERMINATOR
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 120
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 83

    (73) break_statement -> BREAK STMT_TERMINATOR .

    RBRACE          reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    ID              reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    IF              reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    WHILE           reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    FOR             reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    WRITE           reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    WRITELN         reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    BREAK           reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    RETURN          reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    INT             reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    FLOAT           reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    BOOL            reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    CHAR            reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    DOUBLE          reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    LONG            reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    STRING          reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    INTCONST        reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    FLOATCONST      reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    DOUBLECONST     reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    LONGCONST       reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    BOOLCONST       reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    STRCONST        reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    CHARCONST       reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)
    LPAREN          reduce using rule 73 (break_statement -> BREAK STMT_TERMINATOR .)


state 84

    (74) return_statement -> RETURN expression . STMT_TERMINATOR
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    STMT_TERMINATOR shift and go to state 121
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62
    NE              shift and go to state 63
    BOOLEQUAL       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    ARROW           shift and go to state 67


state 85

    (75) return_statement -> RETURN STMT_TERMINATOR .

    RBRACE          reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    ID              reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    IF              reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    WHILE           reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    FOR             reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    WRITE           reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    WRITELN         reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    BREAK           reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    RETURN          reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    INT             reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    FLOAT           reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    BOOL            reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    CHAR            reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    DOUBLE          reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    LONG            reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    STRING          reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    INTCONST        reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    FLOATCONST      reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    DOUBLECONST     reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    LONGCONST       reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    BOOLCONST       reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    STRCONST        reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    CHARCONST       reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)
    LPAREN          reduce using rule 75 (return_statement -> RETURN STMT_TERMINATOR .)


state 86

    (21) assignment -> ID EQUAL expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    STMT_TERMINATOR reduce using rule 21 (assignment -> ID EQUAL expression .)
    COMMA           reduce using rule 21 (assignment -> ID EQUAL expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62
    NE              shift and go to state 63
    BOOLEQUAL       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    ARROW           shift and go to state 67


state 87

    (22) assignment -> ID PLUSEQUAL expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    STMT_TERMINATOR reduce using rule 22 (assignment -> ID PLUSEQUAL expression .)
    COMMA           reduce using rule 22 (assignment -> ID PLUSEQUAL expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62
    NE              shift and go to state 63
    BOOLEQUAL       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    ARROW           shift and go to state 67


state 88

    (23) assignment -> ID MINUSEQUAL expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    STMT_TERMINATOR reduce using rule 23 (assignment -> ID MINUSEQUAL expression .)
    COMMA           reduce using rule 23 (assignment -> ID MINUSEQUAL expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62
    NE              shift and go to state 63
    BOOLEQUAL       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    ARROW           shift and go to state 67


state 89

    (58) assignment -> ID INCREMENT STMT_TERMINATOR .

    STMT_TERMINATOR reduce using rule 58 (assignment -> ID INCREMENT STMT_TERMINATOR .)
    COMMA           reduce using rule 58 (assignment -> ID INCREMENT STMT_TERMINATOR .)


state 90

    (59) assignment -> ID DECREMENT STMT_TERMINATOR .

    STMT_TERMINATOR reduce using rule 59 (assignment -> ID DECREMENT STMT_TERMINATOR .)
    COMMA           reduce using rule 59 (assignment -> ID DECREMENT STMT_TERMINATOR .)


state 91

    (69) array_assignment -> ID LBRACKET expression . RBRACKET EQUAL expression
    (70) array_access -> ID LBRACKET expression . RBRACKET
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    RBRACKET        shift and go to state 122
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62
    NE              shift and go to state 63
    BOOLEQUAL       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    ARROW           shift and go to state 67


state 92

    (31) expression -> expression PLUS term .
    (34) term -> term . MULT factor
    (35) term -> term . DIVIDE factor
    (36) term -> term . MOD factor

    STMT_TERMINATOR reduce using rule 31 (expression -> expression PLUS term .)
    PLUS            reduce using rule 31 (expression -> expression PLUS term .)
    MINUS           reduce using rule 31 (expression -> expression PLUS term .)
    LT              reduce using rule 31 (expression -> expression PLUS term .)
    GT              reduce using rule 31 (expression -> expression PLUS term .)
    LE              reduce using rule 31 (expression -> expression PLUS term .)
    GE              reduce using rule 31 (expression -> expression PLUS term .)
    NE              reduce using rule 31 (expression -> expression PLUS term .)
    BOOLEQUAL       reduce using rule 31 (expression -> expression PLUS term .)
    AND             reduce using rule 31 (expression -> expression PLUS term .)
    OR              reduce using rule 31 (expression -> expression PLUS term .)
    ARROW           reduce using rule 31 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 31 (expression -> expression PLUS term .)
    COMMA           reduce using rule 31 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 31 (expression -> expression PLUS term .)
    MULT            shift and go to state 73
    DIVIDE          shift and go to state 74
    MOD             shift and go to state 75


state 93

    (38) factor -> ID .
    (70) array_access -> ID . LBRACKET expression RBRACKET

    MULT            reduce using rule 38 (factor -> ID .)
    DIVIDE          reduce using rule 38 (factor -> ID .)
    MOD             reduce using rule 38 (factor -> ID .)
    STMT_TERMINATOR reduce using rule 38 (factor -> ID .)
    PLUS            reduce using rule 38 (factor -> ID .)
    MINUS           reduce using rule 38 (factor -> ID .)
    LT              reduce using rule 38 (factor -> ID .)
    GT              reduce using rule 38 (factor -> ID .)
    LE              reduce using rule 38 (factor -> ID .)
    GE              reduce using rule 38 (factor -> ID .)
    NE              reduce using rule 38 (factor -> ID .)
    BOOLEQUAL       reduce using rule 38 (factor -> ID .)
    AND             reduce using rule 38 (factor -> ID .)
    OR              reduce using rule 38 (factor -> ID .)
    ARROW           reduce using rule 38 (factor -> ID .)
    RPAREN          reduce using rule 38 (factor -> ID .)
    COMMA           reduce using rule 38 (factor -> ID .)
    RBRACKET        reduce using rule 38 (factor -> ID .)
    LBRACKET        shift and go to state 115


state 94

    (32) expression -> expression MINUS term .
    (34) term -> term . MULT factor
    (35) term -> term . DIVIDE factor
    (36) term -> term . MOD factor

    STMT_TERMINATOR reduce using rule 32 (expression -> expression MINUS term .)
    PLUS            reduce using rule 32 (expression -> expression MINUS term .)
    MINUS           reduce using rule 32 (expression -> expression MINUS term .)
    LT              reduce using rule 32 (expression -> expression MINUS term .)
    GT              reduce using rule 32 (expression -> expression MINUS term .)
    LE              reduce using rule 32 (expression -> expression MINUS term .)
    GE              reduce using rule 32 (expression -> expression MINUS term .)
    NE              reduce using rule 32 (expression -> expression MINUS term .)
    BOOLEQUAL       reduce using rule 32 (expression -> expression MINUS term .)
    AND             reduce using rule 32 (expression -> expression MINUS term .)
    OR              reduce using rule 32 (expression -> expression MINUS term .)
    ARROW           reduce using rule 32 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 32 (expression -> expression MINUS term .)
    COMMA           reduce using rule 32 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 32 (expression -> expression MINUS term .)
    MULT            shift and go to state 73
    DIVIDE          shift and go to state 74
    MOD             shift and go to state 75


state 95

    (48) expression -> expression LT expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    STMT_TERMINATOR reduce using rule 48 (expression -> expression LT expression .)
    LT              reduce using rule 48 (expression -> expression LT expression .)
    GT              reduce using rule 48 (expression -> expression LT expression .)
    LE              reduce using rule 48 (expression -> expression LT expression .)
    GE              reduce using rule 48 (expression -> expression LT expression .)
    NE              reduce using rule 48 (expression -> expression LT expression .)
    BOOLEQUAL       reduce using rule 48 (expression -> expression LT expression .)
    ARROW           reduce using rule 48 (expression -> expression LT expression .)
    RPAREN          reduce using rule 48 (expression -> expression LT expression .)
    COMMA           reduce using rule 48 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 48 (expression -> expression LT expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    AND             shift and go to state 65
    OR              shift and go to state 66

  ! PLUS            [ reduce using rule 48 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression LT expression .) ]
  ! AND             [ reduce using rule 48 (expression -> expression LT expression .) ]
  ! OR              [ reduce using rule 48 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! LE              [ shift and go to state 61 ]
  ! GE              [ shift and go to state 62 ]
  ! NE              [ shift and go to state 63 ]
  ! BOOLEQUAL       [ shift and go to state 64 ]
  ! ARROW           [ shift and go to state 67 ]


state 96

    (49) expression -> expression GT expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    STMT_TERMINATOR reduce using rule 49 (expression -> expression GT expression .)
    LT              reduce using rule 49 (expression -> expression GT expression .)
    GT              reduce using rule 49 (expression -> expression GT expression .)
    LE              reduce using rule 49 (expression -> expression GT expression .)
    GE              reduce using rule 49 (expression -> expression GT expression .)
    NE              reduce using rule 49 (expression -> expression GT expression .)
    BOOLEQUAL       reduce using rule 49 (expression -> expression GT expression .)
    ARROW           reduce using rule 49 (expression -> expression GT expression .)
    RPAREN          reduce using rule 49 (expression -> expression GT expression .)
    COMMA           reduce using rule 49 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 49 (expression -> expression GT expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    AND             shift and go to state 65
    OR              shift and go to state 66

  ! PLUS            [ reduce using rule 49 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression GT expression .) ]
  ! AND             [ reduce using rule 49 (expression -> expression GT expression .) ]
  ! OR              [ reduce using rule 49 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! LE              [ shift and go to state 61 ]
  ! GE              [ shift and go to state 62 ]
  ! NE              [ shift and go to state 63 ]
  ! BOOLEQUAL       [ shift and go to state 64 ]
  ! ARROW           [ shift and go to state 67 ]


state 97

    (50) expression -> expression LE expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    STMT_TERMINATOR reduce using rule 50 (expression -> expression LE expression .)
    LT              reduce using rule 50 (expression -> expression LE expression .)
    GT              reduce using rule 50 (expression -> expression LE expression .)
    LE              reduce using rule 50 (expression -> expression LE expression .)
    GE              reduce using rule 50 (expression -> expression LE expression .)
    NE              reduce using rule 50 (expression -> expression LE expression .)
    BOOLEQUAL       reduce using rule 50 (expression -> expression LE expression .)
    ARROW           reduce using rule 50 (expression -> expression LE expression .)
    RPAREN          reduce using rule 50 (expression -> expression LE expression .)
    COMMA           reduce using rule 50 (expression -> expression LE expression .)
    RBRACKET        reduce using rule 50 (expression -> expression LE expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    AND             shift and go to state 65
    OR              shift and go to state 66

  ! PLUS            [ reduce using rule 50 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression LE expression .) ]
  ! AND             [ reduce using rule 50 (expression -> expression LE expression .) ]
  ! OR              [ reduce using rule 50 (expression -> expression LE expression .) ]
  ! LT              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! LE              [ shift and go to state 61 ]
  ! GE              [ shift and go to state 62 ]
  ! NE              [ shift and go to state 63 ]
  ! BOOLEQUAL       [ shift and go to state 64 ]
  ! ARROW           [ shift and go to state 67 ]


state 98

    (51) expression -> expression GE expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    STMT_TERMINATOR reduce using rule 51 (expression -> expression GE expression .)
    LT              reduce using rule 51 (expression -> expression GE expression .)
    GT              reduce using rule 51 (expression -> expression GE expression .)
    LE              reduce using rule 51 (expression -> expression GE expression .)
    GE              reduce using rule 51 (expression -> expression GE expression .)
    NE              reduce using rule 51 (expression -> expression GE expression .)
    BOOLEQUAL       reduce using rule 51 (expression -> expression GE expression .)
    ARROW           reduce using rule 51 (expression -> expression GE expression .)
    RPAREN          reduce using rule 51 (expression -> expression GE expression .)
    COMMA           reduce using rule 51 (expression -> expression GE expression .)
    RBRACKET        reduce using rule 51 (expression -> expression GE expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    AND             shift and go to state 65
    OR              shift and go to state 66

  ! PLUS            [ reduce using rule 51 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> expression GE expression .) ]
  ! AND             [ reduce using rule 51 (expression -> expression GE expression .) ]
  ! OR              [ reduce using rule 51 (expression -> expression GE expression .) ]
  ! LT              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! LE              [ shift and go to state 61 ]
  ! GE              [ shift and go to state 62 ]
  ! NE              [ shift and go to state 63 ]
  ! BOOLEQUAL       [ shift and go to state 64 ]
  ! ARROW           [ shift and go to state 67 ]


state 99

    (52) expression -> expression NE expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for BOOLEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
    STMT_TERMINATOR reduce using rule 52 (expression -> expression NE expression .)
    RPAREN          reduce using rule 52 (expression -> expression NE expression .)
    COMMA           reduce using rule 52 (expression -> expression NE expression .)
    RBRACKET        reduce using rule 52 (expression -> expression NE expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62
    NE              shift and go to state 63
    BOOLEQUAL       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    ARROW           shift and go to state 67

  ! PLUS            [ reduce using rule 52 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 52 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 52 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 52 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 52 (expression -> expression NE expression .) ]
  ! NE              [ reduce using rule 52 (expression -> expression NE expression .) ]
  ! BOOLEQUAL       [ reduce using rule 52 (expression -> expression NE expression .) ]
  ! AND             [ reduce using rule 52 (expression -> expression NE expression .) ]
  ! OR              [ reduce using rule 52 (expression -> expression NE expression .) ]
  ! ARROW           [ reduce using rule 52 (expression -> expression NE expression .) ]


state 100

    (53) expression -> expression BOOLEQUAL expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for BOOLEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
    STMT_TERMINATOR reduce using rule 53 (expression -> expression BOOLEQUAL expression .)
    RPAREN          reduce using rule 53 (expression -> expression BOOLEQUAL expression .)
    COMMA           reduce using rule 53 (expression -> expression BOOLEQUAL expression .)
    RBRACKET        reduce using rule 53 (expression -> expression BOOLEQUAL expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62
    NE              shift and go to state 63
    BOOLEQUAL       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    ARROW           shift and go to state 67

  ! PLUS            [ reduce using rule 53 (expression -> expression BOOLEQUAL expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression BOOLEQUAL expression .) ]
  ! LT              [ reduce using rule 53 (expression -> expression BOOLEQUAL expression .) ]
  ! GT              [ reduce using rule 53 (expression -> expression BOOLEQUAL expression .) ]
  ! LE              [ reduce using rule 53 (expression -> expression BOOLEQUAL expression .) ]
  ! GE              [ reduce using rule 53 (expression -> expression BOOLEQUAL expression .) ]
  ! NE              [ reduce using rule 53 (expression -> expression BOOLEQUAL expression .) ]
  ! BOOLEQUAL       [ reduce using rule 53 (expression -> expression BOOLEQUAL expression .) ]
  ! AND             [ reduce using rule 53 (expression -> expression BOOLEQUAL expression .) ]
  ! OR              [ reduce using rule 53 (expression -> expression BOOLEQUAL expression .) ]
  ! ARROW           [ reduce using rule 53 (expression -> expression BOOLEQUAL expression .) ]


state 101

    (54) expression -> expression AND expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    STMT_TERMINATOR reduce using rule 54 (expression -> expression AND expression .)
    PLUS            reduce using rule 54 (expression -> expression AND expression .)
    MINUS           reduce using rule 54 (expression -> expression AND expression .)
    LT              reduce using rule 54 (expression -> expression AND expression .)
    GT              reduce using rule 54 (expression -> expression AND expression .)
    LE              reduce using rule 54 (expression -> expression AND expression .)
    GE              reduce using rule 54 (expression -> expression AND expression .)
    NE              reduce using rule 54 (expression -> expression AND expression .)
    BOOLEQUAL       reduce using rule 54 (expression -> expression AND expression .)
    AND             reduce using rule 54 (expression -> expression AND expression .)
    OR              reduce using rule 54 (expression -> expression AND expression .)
    ARROW           reduce using rule 54 (expression -> expression AND expression .)
    RPAREN          reduce using rule 54 (expression -> expression AND expression .)
    COMMA           reduce using rule 54 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 54 (expression -> expression AND expression .)

  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! LT              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! LE              [ shift and go to state 61 ]
  ! GE              [ shift and go to state 62 ]
  ! NE              [ shift and go to state 63 ]
  ! BOOLEQUAL       [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]
  ! ARROW           [ shift and go to state 67 ]


state 102

    (55) expression -> expression OR expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    STMT_TERMINATOR reduce using rule 55 (expression -> expression OR expression .)
    PLUS            reduce using rule 55 (expression -> expression OR expression .)
    MINUS           reduce using rule 55 (expression -> expression OR expression .)
    LT              reduce using rule 55 (expression -> expression OR expression .)
    GT              reduce using rule 55 (expression -> expression OR expression .)
    LE              reduce using rule 55 (expression -> expression OR expression .)
    GE              reduce using rule 55 (expression -> expression OR expression .)
    NE              reduce using rule 55 (expression -> expression OR expression .)
    BOOLEQUAL       reduce using rule 55 (expression -> expression OR expression .)
    AND             reduce using rule 55 (expression -> expression OR expression .)
    OR              reduce using rule 55 (expression -> expression OR expression .)
    ARROW           reduce using rule 55 (expression -> expression OR expression .)
    RPAREN          reduce using rule 55 (expression -> expression OR expression .)
    COMMA           reduce using rule 55 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 55 (expression -> expression OR expression .)

  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! LT              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! LE              [ shift and go to state 61 ]
  ! GE              [ shift and go to state 62 ]
  ! NE              [ shift and go to state 63 ]
  ! BOOLEQUAL       [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]
  ! ARROW           [ shift and go to state 67 ]


state 103

    (60) expression -> expression ARROW ID .

    STMT_TERMINATOR reduce using rule 60 (expression -> expression ARROW ID .)
    PLUS            reduce using rule 60 (expression -> expression ARROW ID .)
    MINUS           reduce using rule 60 (expression -> expression ARROW ID .)
    LT              reduce using rule 60 (expression -> expression ARROW ID .)
    GT              reduce using rule 60 (expression -> expression ARROW ID .)
    LE              reduce using rule 60 (expression -> expression ARROW ID .)
    GE              reduce using rule 60 (expression -> expression ARROW ID .)
    NE              reduce using rule 60 (expression -> expression ARROW ID .)
    BOOLEQUAL       reduce using rule 60 (expression -> expression ARROW ID .)
    AND             reduce using rule 60 (expression -> expression ARROW ID .)
    OR              reduce using rule 60 (expression -> expression ARROW ID .)
    ARROW           reduce using rule 60 (expression -> expression ARROW ID .)
    RPAREN          reduce using rule 60 (expression -> expression ARROW ID .)
    COMMA           reduce using rule 60 (expression -> expression ARROW ID .)
    RBRACKET        reduce using rule 60 (expression -> expression ARROW ID .)


state 104

    (19) declareid -> declareid COMMA . ID
    (20) declareid -> declareid COMMA . assignment
    (21) assignment -> . ID EQUAL expression
    (22) assignment -> . ID PLUSEQUAL expression
    (23) assignment -> . ID MINUSEQUAL expression
    (58) assignment -> . ID INCREMENT STMT_TERMINATOR
    (59) assignment -> . ID DECREMENT STMT_TERMINATOR

    ID              shift and go to state 123

    assignment                     shift and go to state 124

state 105

    (68) array_declaration -> datatype ID LBRACKET . INTCONST RBRACKET

    INTCONST        shift and go to state 125


state 106

    (58) assignment -> ID INCREMENT . STMT_TERMINATOR

    STMT_TERMINATOR shift and go to state 89


state 107

    (59) assignment -> ID DECREMENT . STMT_TERMINATOR

    STMT_TERMINATOR shift and go to state 90


state 108

    (34) term -> term MULT factor .

    MULT            reduce using rule 34 (term -> term MULT factor .)
    DIVIDE          reduce using rule 34 (term -> term MULT factor .)
    MOD             reduce using rule 34 (term -> term MULT factor .)
    STMT_TERMINATOR reduce using rule 34 (term -> term MULT factor .)
    PLUS            reduce using rule 34 (term -> term MULT factor .)
    MINUS           reduce using rule 34 (term -> term MULT factor .)
    LT              reduce using rule 34 (term -> term MULT factor .)
    GT              reduce using rule 34 (term -> term MULT factor .)
    LE              reduce using rule 34 (term -> term MULT factor .)
    GE              reduce using rule 34 (term -> term MULT factor .)
    NE              reduce using rule 34 (term -> term MULT factor .)
    BOOLEQUAL       reduce using rule 34 (term -> term MULT factor .)
    AND             reduce using rule 34 (term -> term MULT factor .)
    OR              reduce using rule 34 (term -> term MULT factor .)
    ARROW           reduce using rule 34 (term -> term MULT factor .)
    RPAREN          reduce using rule 34 (term -> term MULT factor .)
    COMMA           reduce using rule 34 (term -> term MULT factor .)
    RBRACKET        reduce using rule 34 (term -> term MULT factor .)


state 109

    (35) term -> term DIVIDE factor .

    MULT            reduce using rule 35 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 35 (term -> term DIVIDE factor .)
    MOD             reduce using rule 35 (term -> term DIVIDE factor .)
    STMT_TERMINATOR reduce using rule 35 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 35 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 35 (term -> term DIVIDE factor .)
    LT              reduce using rule 35 (term -> term DIVIDE factor .)
    GT              reduce using rule 35 (term -> term DIVIDE factor .)
    LE              reduce using rule 35 (term -> term DIVIDE factor .)
    GE              reduce using rule 35 (term -> term DIVIDE factor .)
    NE              reduce using rule 35 (term -> term DIVIDE factor .)
    BOOLEQUAL       reduce using rule 35 (term -> term DIVIDE factor .)
    AND             reduce using rule 35 (term -> term DIVIDE factor .)
    OR              reduce using rule 35 (term -> term DIVIDE factor .)
    ARROW           reduce using rule 35 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 35 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 35 (term -> term DIVIDE factor .)
    RBRACKET        reduce using rule 35 (term -> term DIVIDE factor .)


state 110

    (36) term -> term MOD factor .

    MULT            reduce using rule 36 (term -> term MOD factor .)
    DIVIDE          reduce using rule 36 (term -> term MOD factor .)
    MOD             reduce using rule 36 (term -> term MOD factor .)
    STMT_TERMINATOR reduce using rule 36 (term -> term MOD factor .)
    PLUS            reduce using rule 36 (term -> term MOD factor .)
    MINUS           reduce using rule 36 (term -> term MOD factor .)
    LT              reduce using rule 36 (term -> term MOD factor .)
    GT              reduce using rule 36 (term -> term MOD factor .)
    LE              reduce using rule 36 (term -> term MOD factor .)
    GE              reduce using rule 36 (term -> term MOD factor .)
    NE              reduce using rule 36 (term -> term MOD factor .)
    BOOLEQUAL       reduce using rule 36 (term -> term MOD factor .)
    AND             reduce using rule 36 (term -> term MOD factor .)
    OR              reduce using rule 36 (term -> term MOD factor .)
    ARROW           reduce using rule 36 (term -> term MOD factor .)
    RPAREN          reduce using rule 36 (term -> term MOD factor .)
    COMMA           reduce using rule 36 (term -> term MOD factor .)
    RBRACKET        reduce using rule 36 (term -> term MOD factor .)


state 111

    (61) if_statement -> IF LPAREN expression . RPAREN LBRACE code RBRACE
    (62) if_statement -> IF LPAREN expression . RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    RPAREN          shift and go to state 126
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62
    NE              shift and go to state 63
    BOOLEQUAL       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    ARROW           shift and go to state 67


state 112

    (47) factor -> LPAREN expression RPAREN .

    MULT            reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    STMT_TERMINATOR reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    BOOLEQUAL       reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    ARROW           reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 47 (factor -> LPAREN expression RPAREN .)


state 113

    (56) expression -> ID INCREMENT .

    RPAREN          reduce using rule 56 (expression -> ID INCREMENT .)
    PLUS            reduce using rule 56 (expression -> ID INCREMENT .)
    MINUS           reduce using rule 56 (expression -> ID INCREMENT .)
    LT              reduce using rule 56 (expression -> ID INCREMENT .)
    GT              reduce using rule 56 (expression -> ID INCREMENT .)
    LE              reduce using rule 56 (expression -> ID INCREMENT .)
    GE              reduce using rule 56 (expression -> ID INCREMENT .)
    NE              reduce using rule 56 (expression -> ID INCREMENT .)
    BOOLEQUAL       reduce using rule 56 (expression -> ID INCREMENT .)
    AND             reduce using rule 56 (expression -> ID INCREMENT .)
    OR              reduce using rule 56 (expression -> ID INCREMENT .)
    ARROW           reduce using rule 56 (expression -> ID INCREMENT .)
    STMT_TERMINATOR reduce using rule 56 (expression -> ID INCREMENT .)
    COMMA           reduce using rule 56 (expression -> ID INCREMENT .)
    RBRACKET        reduce using rule 56 (expression -> ID INCREMENT .)


state 114

    (57) expression -> ID DECREMENT .

    RPAREN          reduce using rule 57 (expression -> ID DECREMENT .)
    PLUS            reduce using rule 57 (expression -> ID DECREMENT .)
    MINUS           reduce using rule 57 (expression -> ID DECREMENT .)
    LT              reduce using rule 57 (expression -> ID DECREMENT .)
    GT              reduce using rule 57 (expression -> ID DECREMENT .)
    LE              reduce using rule 57 (expression -> ID DECREMENT .)
    GE              reduce using rule 57 (expression -> ID DECREMENT .)
    NE              reduce using rule 57 (expression -> ID DECREMENT .)
    BOOLEQUAL       reduce using rule 57 (expression -> ID DECREMENT .)
    AND             reduce using rule 57 (expression -> ID DECREMENT .)
    OR              reduce using rule 57 (expression -> ID DECREMENT .)
    ARROW           reduce using rule 57 (expression -> ID DECREMENT .)
    STMT_TERMINATOR reduce using rule 57 (expression -> ID DECREMENT .)
    COMMA           reduce using rule 57 (expression -> ID DECREMENT .)
    RBRACKET        reduce using rule 57 (expression -> ID DECREMENT .)


state 115

    (70) array_access -> ID LBRACKET . expression RBRACKET
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 127
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 116

    (63) while_statement -> WHILE LPAREN expression . RPAREN LBRACE code RBRACE
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    RPAREN          shift and go to state 128
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62
    NE              shift and go to state 63
    BOOLEQUAL       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    ARROW           shift and go to state 67


state 117

    (64) for_statement -> FOR LPAREN assignment . STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE

    STMT_TERMINATOR shift and go to state 129


state 118

    (21) assignment -> ID . EQUAL expression
    (22) assignment -> ID . PLUSEQUAL expression
    (23) assignment -> ID . MINUSEQUAL expression
    (58) assignment -> ID . INCREMENT STMT_TERMINATOR
    (59) assignment -> ID . DECREMENT STMT_TERMINATOR

    EQUAL           shift and go to state 46
    PLUSEQUAL       shift and go to state 47
    MINUSEQUAL      shift and go to state 48
    INCREMENT       shift and go to state 106
    DECREMENT       shift and go to state 107


state 119

    (71) write_statement -> WRITE LPAREN expression . RPAREN STMT_TERMINATOR
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    RPAREN          shift and go to state 130
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62
    NE              shift and go to state 63
    BOOLEQUAL       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    ARROW           shift and go to state 67


state 120

    (72) writeln_statement -> WRITELN LPAREN expression . RPAREN STMT_TERMINATOR
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    RPAREN          shift and go to state 131
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62
    NE              shift and go to state 63
    BOOLEQUAL       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    ARROW           shift and go to state 67


state 121

    (74) return_statement -> RETURN expression STMT_TERMINATOR .

    RBRACE          reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    ID              reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    IF              reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    WHILE           reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    FOR             reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    WRITE           reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    WRITELN         reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    BREAK           reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    RETURN          reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    INT             reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    FLOAT           reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    BOOL            reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    CHAR            reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    DOUBLE          reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    LONG            reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    STRING          reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    INTCONST        reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    FLOATCONST      reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    DOUBLECONST     reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    LONGCONST       reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    BOOLCONST       reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    STRCONST        reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    CHARCONST       reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)
    LPAREN          reduce using rule 74 (return_statement -> RETURN expression STMT_TERMINATOR .)


state 122

    (69) array_assignment -> ID LBRACKET expression RBRACKET . EQUAL expression
    (70) array_access -> ID LBRACKET expression RBRACKET .

    EQUAL           shift and go to state 132
    MULT            reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    MOD             reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    STMT_TERMINATOR reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    LT              reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    GT              reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    LE              reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    GE              reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    NE              reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    BOOLEQUAL       reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    AND             reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    OR              reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    ARROW           reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)


state 123

    (19) declareid -> declareid COMMA ID .
    (21) assignment -> ID . EQUAL expression
    (22) assignment -> ID . PLUSEQUAL expression
    (23) assignment -> ID . MINUSEQUAL expression
    (58) assignment -> ID . INCREMENT STMT_TERMINATOR
    (59) assignment -> ID . DECREMENT STMT_TERMINATOR

    COMMA           reduce using rule 19 (declareid -> declareid COMMA ID .)
    STMT_TERMINATOR reduce using rule 19 (declareid -> declareid COMMA ID .)
    EQUAL           shift and go to state 46
    PLUSEQUAL       shift and go to state 47
    MINUSEQUAL      shift and go to state 48
    INCREMENT       shift and go to state 106
    DECREMENT       shift and go to state 107


state 124

    (20) declareid -> declareid COMMA assignment .

    COMMA           reduce using rule 20 (declareid -> declareid COMMA assignment .)
    STMT_TERMINATOR reduce using rule 20 (declareid -> declareid COMMA assignment .)


state 125

    (68) array_declaration -> datatype ID LBRACKET INTCONST . RBRACKET

    RBRACKET        shift and go to state 133


state 126

    (61) if_statement -> IF LPAREN expression RPAREN . LBRACE code RBRACE
    (62) if_statement -> IF LPAREN expression RPAREN . LBRACE code RBRACE ELSE LBRACE code RBRACE

    LBRACE          shift and go to state 134


state 127

    (70) array_access -> ID LBRACKET expression . RBRACKET
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    RBRACKET        shift and go to state 135
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62
    NE              shift and go to state 63
    BOOLEQUAL       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    ARROW           shift and go to state 67


state 128

    (63) while_statement -> WHILE LPAREN expression RPAREN . LBRACE code RBRACE

    LBRACE          shift and go to state 136


state 129

    (64) for_statement -> FOR LPAREN assignment STMT_TERMINATOR . expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 137
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 130

    (71) write_statement -> WRITE LPAREN expression RPAREN . STMT_TERMINATOR

    STMT_TERMINATOR shift and go to state 138


state 131

    (72) writeln_statement -> WRITELN LPAREN expression RPAREN . STMT_TERMINATOR

    STMT_TERMINATOR shift and go to state 139


state 132

    (69) array_assignment -> ID LBRACKET expression RBRACKET EQUAL . expression
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 140
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 133

    (68) array_declaration -> datatype ID LBRACKET INTCONST RBRACKET .

    STMT_TERMINATOR reduce using rule 68 (array_declaration -> datatype ID LBRACKET INTCONST RBRACKET .)


state 134

    (61) if_statement -> IF LPAREN expression RPAREN LBRACE . code RBRACE
    (62) if_statement -> IF LPAREN expression RPAREN LBRACE . code RBRACE ELSE LBRACE code RBRACE
    (2) code -> . statement
    (3) code -> . code statement
    (4) statement -> . assignment STMT_TERMINATOR
    (5) statement -> . declaration STMT_TERMINATOR
    (6) statement -> . expression STMT_TERMINATOR
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . for_statement
    (10) statement -> . array_declaration STMT_TERMINATOR
    (11) statement -> . array_assignment STMT_TERMINATOR
    (12) statement -> . write_statement
    (13) statement -> . writeln_statement
    (14) statement -> . break_statement
    (15) statement -> . return_statement
    (21) assignment -> . ID EQUAL expression
    (22) assignment -> . ID PLUSEQUAL expression
    (23) assignment -> . ID MINUSEQUAL expression
    (58) assignment -> . ID INCREMENT STMT_TERMINATOR
    (59) assignment -> . ID DECREMENT STMT_TERMINATOR
    (16) declaration -> . datatype declareid
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (61) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE
    (62) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE
    (63) while_statement -> . WHILE LPAREN expression RPAREN LBRACE code RBRACE
    (64) for_statement -> . FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE
    (68) array_declaration -> . datatype ID LBRACKET INTCONST RBRACKET
    (69) array_assignment -> . ID LBRACKET expression RBRACKET EQUAL expression
    (71) write_statement -> . WRITE LPAREN expression RPAREN STMT_TERMINATOR
    (72) writeln_statement -> . WRITELN LPAREN expression RPAREN STMT_TERMINATOR
    (73) break_statement -> . BREAK STMT_TERMINATOR
    (74) return_statement -> . RETURN expression STMT_TERMINATOR
    (75) return_statement -> . RETURN STMT_TERMINATOR
    (24) datatype -> . INT
    (25) datatype -> . FLOAT
    (26) datatype -> . BOOL
    (27) datatype -> . CHAR
    (28) datatype -> . DOUBLE
    (29) datatype -> . LONG
    (30) datatype -> . STRING
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 5
    IF              shift and go to state 22
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    WRITE           shift and go to state 27
    WRITELN         shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    BOOL            shift and go to state 33
    CHAR            shift and go to state 34
    DOUBLE          shift and go to state 35
    LONG            shift and go to state 36
    STRING          shift and go to state 37
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 10
    code                           shift and go to state 141
    statement                      shift and go to state 7
    assignment                     shift and go to state 8
    declaration                    shift and go to state 9
    if_statement                   shift and go to state 11
    while_statement                shift and go to state 12
    for_statement                  shift and go to state 13
    array_declaration              shift and go to state 14
    array_assignment               shift and go to state 15
    write_statement                shift and go to state 16
    writeln_statement              shift and go to state 17
    break_statement                shift and go to state 18
    return_statement               shift and go to state 19
    datatype                       shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 135

    (70) array_access -> ID LBRACKET expression RBRACKET .

    MULT            reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    MOD             reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    LT              reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    GT              reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    LE              reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    GE              reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    NE              reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    BOOLEQUAL       reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    AND             reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    OR              reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    ARROW           reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    STMT_TERMINATOR reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 70 (array_access -> ID LBRACKET expression RBRACKET .)


state 136

    (63) while_statement -> WHILE LPAREN expression RPAREN LBRACE . code RBRACE
    (2) code -> . statement
    (3) code -> . code statement
    (4) statement -> . assignment STMT_TERMINATOR
    (5) statement -> . declaration STMT_TERMINATOR
    (6) statement -> . expression STMT_TERMINATOR
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . for_statement
    (10) statement -> . array_declaration STMT_TERMINATOR
    (11) statement -> . array_assignment STMT_TERMINATOR
    (12) statement -> . write_statement
    (13) statement -> . writeln_statement
    (14) statement -> . break_statement
    (15) statement -> . return_statement
    (21) assignment -> . ID EQUAL expression
    (22) assignment -> . ID PLUSEQUAL expression
    (23) assignment -> . ID MINUSEQUAL expression
    (58) assignment -> . ID INCREMENT STMT_TERMINATOR
    (59) assignment -> . ID DECREMENT STMT_TERMINATOR
    (16) declaration -> . datatype declareid
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (61) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE
    (62) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE
    (63) while_statement -> . WHILE LPAREN expression RPAREN LBRACE code RBRACE
    (64) for_statement -> . FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE
    (68) array_declaration -> . datatype ID LBRACKET INTCONST RBRACKET
    (69) array_assignment -> . ID LBRACKET expression RBRACKET EQUAL expression
    (71) write_statement -> . WRITE LPAREN expression RPAREN STMT_TERMINATOR
    (72) writeln_statement -> . WRITELN LPAREN expression RPAREN STMT_TERMINATOR
    (73) break_statement -> . BREAK STMT_TERMINATOR
    (74) return_statement -> . RETURN expression STMT_TERMINATOR
    (75) return_statement -> . RETURN STMT_TERMINATOR
    (24) datatype -> . INT
    (25) datatype -> . FLOAT
    (26) datatype -> . BOOL
    (27) datatype -> . CHAR
    (28) datatype -> . DOUBLE
    (29) datatype -> . LONG
    (30) datatype -> . STRING
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 5
    IF              shift and go to state 22
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    WRITE           shift and go to state 27
    WRITELN         shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    BOOL            shift and go to state 33
    CHAR            shift and go to state 34
    DOUBLE          shift and go to state 35
    LONG            shift and go to state 36
    STRING          shift and go to state 37
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 10
    code                           shift and go to state 142
    statement                      shift and go to state 7
    assignment                     shift and go to state 8
    declaration                    shift and go to state 9
    if_statement                   shift and go to state 11
    while_statement                shift and go to state 12
    for_statement                  shift and go to state 13
    array_declaration              shift and go to state 14
    array_assignment               shift and go to state 15
    write_statement                shift and go to state 16
    writeln_statement              shift and go to state 17
    break_statement                shift and go to state 18
    return_statement               shift and go to state 19
    datatype                       shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 137

    (64) for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression . STMT_TERMINATOR expression RPAREN LBRACE code RBRACE
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    STMT_TERMINATOR shift and go to state 143
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62
    NE              shift and go to state 63
    BOOLEQUAL       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    ARROW           shift and go to state 67


state 138

    (71) write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .

    RBRACE          reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    ID              reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    IF              reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    WHILE           reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    FOR             reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    WRITE           reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    WRITELN         reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    BREAK           reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    RETURN          reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    INT             reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    FLOAT           reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    BOOL            reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    CHAR            reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    DOUBLE          reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    LONG            reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    STRING          reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    INTCONST        reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    FLOATCONST      reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    DOUBLECONST     reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    LONGCONST       reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    BOOLCONST       reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    STRCONST        reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    CHARCONST       reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)
    LPAREN          reduce using rule 71 (write_statement -> WRITE LPAREN expression RPAREN STMT_TERMINATOR .)


state 139

    (72) writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .

    RBRACE          reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    ID              reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    IF              reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    WHILE           reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    FOR             reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    WRITE           reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    WRITELN         reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    BREAK           reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    RETURN          reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    INT             reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    FLOAT           reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    BOOL            reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    CHAR            reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    DOUBLE          reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    LONG            reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    STRING          reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    INTCONST        reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    FLOATCONST      reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    DOUBLECONST     reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    LONGCONST       reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    BOOLCONST       reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    STRCONST        reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    CHARCONST       reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)
    LPAREN          reduce using rule 72 (writeln_statement -> WRITELN LPAREN expression RPAREN STMT_TERMINATOR .)


state 140

    (69) array_assignment -> ID LBRACKET expression RBRACKET EQUAL expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    STMT_TERMINATOR reduce using rule 69 (array_assignment -> ID LBRACKET expression RBRACKET EQUAL expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62
    NE              shift and go to state 63
    BOOLEQUAL       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    ARROW           shift and go to state 67


state 141

    (61) if_statement -> IF LPAREN expression RPAREN LBRACE code . RBRACE
    (62) if_statement -> IF LPAREN expression RPAREN LBRACE code . RBRACE ELSE LBRACE code RBRACE
    (3) code -> code . statement
    (4) statement -> . assignment STMT_TERMINATOR
    (5) statement -> . declaration STMT_TERMINATOR
    (6) statement -> . expression STMT_TERMINATOR
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . for_statement
    (10) statement -> . array_declaration STMT_TERMINATOR
    (11) statement -> . array_assignment STMT_TERMINATOR
    (12) statement -> . write_statement
    (13) statement -> . writeln_statement
    (14) statement -> . break_statement
    (15) statement -> . return_statement
    (21) assignment -> . ID EQUAL expression
    (22) assignment -> . ID PLUSEQUAL expression
    (23) assignment -> . ID MINUSEQUAL expression
    (58) assignment -> . ID INCREMENT STMT_TERMINATOR
    (59) assignment -> . ID DECREMENT STMT_TERMINATOR
    (16) declaration -> . datatype declareid
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (61) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE
    (62) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE
    (63) while_statement -> . WHILE LPAREN expression RPAREN LBRACE code RBRACE
    (64) for_statement -> . FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE
    (68) array_declaration -> . datatype ID LBRACKET INTCONST RBRACKET
    (69) array_assignment -> . ID LBRACKET expression RBRACKET EQUAL expression
    (71) write_statement -> . WRITE LPAREN expression RPAREN STMT_TERMINATOR
    (72) writeln_statement -> . WRITELN LPAREN expression RPAREN STMT_TERMINATOR
    (73) break_statement -> . BREAK STMT_TERMINATOR
    (74) return_statement -> . RETURN expression STMT_TERMINATOR
    (75) return_statement -> . RETURN STMT_TERMINATOR
    (24) datatype -> . INT
    (25) datatype -> . FLOAT
    (26) datatype -> . BOOL
    (27) datatype -> . CHAR
    (28) datatype -> . DOUBLE
    (29) datatype -> . LONG
    (30) datatype -> . STRING
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    RBRACE          shift and go to state 144
    ID              shift and go to state 5
    IF              shift and go to state 22
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    WRITE           shift and go to state 27
    WRITELN         shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    BOOL            shift and go to state 33
    CHAR            shift and go to state 34
    DOUBLE          shift and go to state 35
    LONG            shift and go to state 36
    STRING          shift and go to state 37
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 10
    statement                      shift and go to state 53
    assignment                     shift and go to state 8
    declaration                    shift and go to state 9
    if_statement                   shift and go to state 11
    while_statement                shift and go to state 12
    for_statement                  shift and go to state 13
    array_declaration              shift and go to state 14
    array_assignment               shift and go to state 15
    write_statement                shift and go to state 16
    writeln_statement              shift and go to state 17
    break_statement                shift and go to state 18
    return_statement               shift and go to state 19
    datatype                       shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 142

    (63) while_statement -> WHILE LPAREN expression RPAREN LBRACE code . RBRACE
    (3) code -> code . statement
    (4) statement -> . assignment STMT_TERMINATOR
    (5) statement -> . declaration STMT_TERMINATOR
    (6) statement -> . expression STMT_TERMINATOR
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . for_statement
    (10) statement -> . array_declaration STMT_TERMINATOR
    (11) statement -> . array_assignment STMT_TERMINATOR
    (12) statement -> . write_statement
    (13) statement -> . writeln_statement
    (14) statement -> . break_statement
    (15) statement -> . return_statement
    (21) assignment -> . ID EQUAL expression
    (22) assignment -> . ID PLUSEQUAL expression
    (23) assignment -> . ID MINUSEQUAL expression
    (58) assignment -> . ID INCREMENT STMT_TERMINATOR
    (59) assignment -> . ID DECREMENT STMT_TERMINATOR
    (16) declaration -> . datatype declareid
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (61) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE
    (62) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE
    (63) while_statement -> . WHILE LPAREN expression RPAREN LBRACE code RBRACE
    (64) for_statement -> . FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE
    (68) array_declaration -> . datatype ID LBRACKET INTCONST RBRACKET
    (69) array_assignment -> . ID LBRACKET expression RBRACKET EQUAL expression
    (71) write_statement -> . WRITE LPAREN expression RPAREN STMT_TERMINATOR
    (72) writeln_statement -> . WRITELN LPAREN expression RPAREN STMT_TERMINATOR
    (73) break_statement -> . BREAK STMT_TERMINATOR
    (74) return_statement -> . RETURN expression STMT_TERMINATOR
    (75) return_statement -> . RETURN STMT_TERMINATOR
    (24) datatype -> . INT
    (25) datatype -> . FLOAT
    (26) datatype -> . BOOL
    (27) datatype -> . CHAR
    (28) datatype -> . DOUBLE
    (29) datatype -> . LONG
    (30) datatype -> . STRING
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    RBRACE          shift and go to state 145
    ID              shift and go to state 5
    IF              shift and go to state 22
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    WRITE           shift and go to state 27
    WRITELN         shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    BOOL            shift and go to state 33
    CHAR            shift and go to state 34
    DOUBLE          shift and go to state 35
    LONG            shift and go to state 36
    STRING          shift and go to state 37
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 10
    statement                      shift and go to state 53
    assignment                     shift and go to state 8
    declaration                    shift and go to state 9
    if_statement                   shift and go to state 11
    while_statement                shift and go to state 12
    for_statement                  shift and go to state 13
    array_declaration              shift and go to state 14
    array_assignment               shift and go to state 15
    write_statement                shift and go to state 16
    writeln_statement              shift and go to state 17
    break_statement                shift and go to state 18
    return_statement               shift and go to state 19
    datatype                       shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 143

    (64) for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR . expression RPAREN LBRACE code RBRACE
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 78
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 146
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 144

    (61) if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .
    (62) if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE . ELSE LBRACE code RBRACE

    RBRACE          reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    ID              reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    IF              reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    WHILE           reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    FOR             reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    WRITE           reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    WRITELN         reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    BREAK           reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    RETURN          reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    INT             reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    FLOAT           reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    BOOL            reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    CHAR            reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    DOUBLE          reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    LONG            reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    STRING          reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    INTCONST        reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    FLOATCONST      reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    DOUBLECONST     reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    LONGCONST       reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    BOOLCONST       reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    STRCONST        reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    CHARCONST       reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    LPAREN          reduce using rule 61 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE .)
    ELSE            shift and go to state 147


state 145

    (63) while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .

    RBRACE          reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    ID              reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    IF              reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    WHILE           reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    FOR             reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    WRITE           reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    WRITELN         reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    BREAK           reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    RETURN          reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    INT             reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    FLOAT           reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    BOOL            reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    CHAR            reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    DOUBLE          reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    LONG            reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    STRING          reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    INTCONST        reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    FLOATCONST      reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    DOUBLECONST     reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    LONGCONST       reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    BOOLCONST       reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    STRCONST        reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    CHARCONST       reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)
    LPAREN          reduce using rule 63 (while_statement -> WHILE LPAREN expression RPAREN LBRACE code RBRACE .)


state 146

    (64) for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression . RPAREN LBRACE code RBRACE
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (48) expression -> expression . LT expression
    (49) expression -> expression . GT expression
    (50) expression -> expression . LE expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . NE expression
    (53) expression -> expression . BOOLEQUAL expression
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (60) expression -> expression . ARROW ID

    RPAREN          shift and go to state 148
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62
    NE              shift and go to state 63
    BOOLEQUAL       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    ARROW           shift and go to state 67


state 147

    (62) if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE . LBRACE code RBRACE

    LBRACE          shift and go to state 149


state 148

    (64) for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN . LBRACE code RBRACE

    LBRACE          shift and go to state 150


state 149

    (62) if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE . code RBRACE
    (2) code -> . statement
    (3) code -> . code statement
    (4) statement -> . assignment STMT_TERMINATOR
    (5) statement -> . declaration STMT_TERMINATOR
    (6) statement -> . expression STMT_TERMINATOR
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . for_statement
    (10) statement -> . array_declaration STMT_TERMINATOR
    (11) statement -> . array_assignment STMT_TERMINATOR
    (12) statement -> . write_statement
    (13) statement -> . writeln_statement
    (14) statement -> . break_statement
    (15) statement -> . return_statement
    (21) assignment -> . ID EQUAL expression
    (22) assignment -> . ID PLUSEQUAL expression
    (23) assignment -> . ID MINUSEQUAL expression
    (58) assignment -> . ID INCREMENT STMT_TERMINATOR
    (59) assignment -> . ID DECREMENT STMT_TERMINATOR
    (16) declaration -> . datatype declareid
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (61) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE
    (62) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE
    (63) while_statement -> . WHILE LPAREN expression RPAREN LBRACE code RBRACE
    (64) for_statement -> . FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE
    (68) array_declaration -> . datatype ID LBRACKET INTCONST RBRACKET
    (69) array_assignment -> . ID LBRACKET expression RBRACKET EQUAL expression
    (71) write_statement -> . WRITE LPAREN expression RPAREN STMT_TERMINATOR
    (72) writeln_statement -> . WRITELN LPAREN expression RPAREN STMT_TERMINATOR
    (73) break_statement -> . BREAK STMT_TERMINATOR
    (74) return_statement -> . RETURN expression STMT_TERMINATOR
    (75) return_statement -> . RETURN STMT_TERMINATOR
    (24) datatype -> . INT
    (25) datatype -> . FLOAT
    (26) datatype -> . BOOL
    (27) datatype -> . CHAR
    (28) datatype -> . DOUBLE
    (29) datatype -> . LONG
    (30) datatype -> . STRING
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 5
    IF              shift and go to state 22
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    WRITE           shift and go to state 27
    WRITELN         shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    BOOL            shift and go to state 33
    CHAR            shift and go to state 34
    DOUBLE          shift and go to state 35
    LONG            shift and go to state 36
    STRING          shift and go to state 37
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 10
    code                           shift and go to state 151
    statement                      shift and go to state 7
    assignment                     shift and go to state 8
    declaration                    shift and go to state 9
    if_statement                   shift and go to state 11
    while_statement                shift and go to state 12
    for_statement                  shift and go to state 13
    array_declaration              shift and go to state 14
    array_assignment               shift and go to state 15
    write_statement                shift and go to state 16
    writeln_statement              shift and go to state 17
    break_statement                shift and go to state 18
    return_statement               shift and go to state 19
    datatype                       shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 150

    (64) for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE . code RBRACE
    (2) code -> . statement
    (3) code -> . code statement
    (4) statement -> . assignment STMT_TERMINATOR
    (5) statement -> . declaration STMT_TERMINATOR
    (6) statement -> . expression STMT_TERMINATOR
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . for_statement
    (10) statement -> . array_declaration STMT_TERMINATOR
    (11) statement -> . array_assignment STMT_TERMINATOR
    (12) statement -> . write_statement
    (13) statement -> . writeln_statement
    (14) statement -> . break_statement
    (15) statement -> . return_statement
    (21) assignment -> . ID EQUAL expression
    (22) assignment -> . ID PLUSEQUAL expression
    (23) assignment -> . ID MINUSEQUAL expression
    (58) assignment -> . ID INCREMENT STMT_TERMINATOR
    (59) assignment -> . ID DECREMENT STMT_TERMINATOR
    (16) declaration -> . datatype declareid
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (61) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE
    (62) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE
    (63) while_statement -> . WHILE LPAREN expression RPAREN LBRACE code RBRACE
    (64) for_statement -> . FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE
    (68) array_declaration -> . datatype ID LBRACKET INTCONST RBRACKET
    (69) array_assignment -> . ID LBRACKET expression RBRACKET EQUAL expression
    (71) write_statement -> . WRITE LPAREN expression RPAREN STMT_TERMINATOR
    (72) writeln_statement -> . WRITELN LPAREN expression RPAREN STMT_TERMINATOR
    (73) break_statement -> . BREAK STMT_TERMINATOR
    (74) return_statement -> . RETURN expression STMT_TERMINATOR
    (75) return_statement -> . RETURN STMT_TERMINATOR
    (24) datatype -> . INT
    (25) datatype -> . FLOAT
    (26) datatype -> . BOOL
    (27) datatype -> . CHAR
    (28) datatype -> . DOUBLE
    (29) datatype -> . LONG
    (30) datatype -> . STRING
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 5
    IF              shift and go to state 22
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    WRITE           shift and go to state 27
    WRITELN         shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    BOOL            shift and go to state 33
    CHAR            shift and go to state 34
    DOUBLE          shift and go to state 35
    LONG            shift and go to state 36
    STRING          shift and go to state 37
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    assignment                     shift and go to state 8
    expression                     shift and go to state 10
    code                           shift and go to state 152
    statement                      shift and go to state 7
    declaration                    shift and go to state 9
    if_statement                   shift and go to state 11
    while_statement                shift and go to state 12
    for_statement                  shift and go to state 13
    array_declaration              shift and go to state 14
    array_assignment               shift and go to state 15
    write_statement                shift and go to state 16
    writeln_statement              shift and go to state 17
    break_statement                shift and go to state 18
    return_statement               shift and go to state 19
    datatype                       shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 151

    (62) if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code . RBRACE
    (3) code -> code . statement
    (4) statement -> . assignment STMT_TERMINATOR
    (5) statement -> . declaration STMT_TERMINATOR
    (6) statement -> . expression STMT_TERMINATOR
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . for_statement
    (10) statement -> . array_declaration STMT_TERMINATOR
    (11) statement -> . array_assignment STMT_TERMINATOR
    (12) statement -> . write_statement
    (13) statement -> . writeln_statement
    (14) statement -> . break_statement
    (15) statement -> . return_statement
    (21) assignment -> . ID EQUAL expression
    (22) assignment -> . ID PLUSEQUAL expression
    (23) assignment -> . ID MINUSEQUAL expression
    (58) assignment -> . ID INCREMENT STMT_TERMINATOR
    (59) assignment -> . ID DECREMENT STMT_TERMINATOR
    (16) declaration -> . datatype declareid
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (61) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE
    (62) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE
    (63) while_statement -> . WHILE LPAREN expression RPAREN LBRACE code RBRACE
    (64) for_statement -> . FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE
    (68) array_declaration -> . datatype ID LBRACKET INTCONST RBRACKET
    (69) array_assignment -> . ID LBRACKET expression RBRACKET EQUAL expression
    (71) write_statement -> . WRITE LPAREN expression RPAREN STMT_TERMINATOR
    (72) writeln_statement -> . WRITELN LPAREN expression RPAREN STMT_TERMINATOR
    (73) break_statement -> . BREAK STMT_TERMINATOR
    (74) return_statement -> . RETURN expression STMT_TERMINATOR
    (75) return_statement -> . RETURN STMT_TERMINATOR
    (24) datatype -> . INT
    (25) datatype -> . FLOAT
    (26) datatype -> . BOOL
    (27) datatype -> . CHAR
    (28) datatype -> . DOUBLE
    (29) datatype -> . LONG
    (30) datatype -> . STRING
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    RBRACE          shift and go to state 153
    ID              shift and go to state 5
    IF              shift and go to state 22
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    WRITE           shift and go to state 27
    WRITELN         shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    BOOL            shift and go to state 33
    CHAR            shift and go to state 34
    DOUBLE          shift and go to state 35
    LONG            shift and go to state 36
    STRING          shift and go to state 37
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    expression                     shift and go to state 10
    statement                      shift and go to state 53
    assignment                     shift and go to state 8
    declaration                    shift and go to state 9
    if_statement                   shift and go to state 11
    while_statement                shift and go to state 12
    for_statement                  shift and go to state 13
    array_declaration              shift and go to state 14
    array_assignment               shift and go to state 15
    write_statement                shift and go to state 16
    writeln_statement              shift and go to state 17
    break_statement                shift and go to state 18
    return_statement               shift and go to state 19
    datatype                       shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 152

    (64) for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code . RBRACE
    (3) code -> code . statement
    (4) statement -> . assignment STMT_TERMINATOR
    (5) statement -> . declaration STMT_TERMINATOR
    (6) statement -> . expression STMT_TERMINATOR
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . for_statement
    (10) statement -> . array_declaration STMT_TERMINATOR
    (11) statement -> . array_assignment STMT_TERMINATOR
    (12) statement -> . write_statement
    (13) statement -> . writeln_statement
    (14) statement -> . break_statement
    (15) statement -> . return_statement
    (21) assignment -> . ID EQUAL expression
    (22) assignment -> . ID PLUSEQUAL expression
    (23) assignment -> . ID MINUSEQUAL expression
    (58) assignment -> . ID INCREMENT STMT_TERMINATOR
    (59) assignment -> . ID DECREMENT STMT_TERMINATOR
    (16) declaration -> . datatype declareid
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (48) expression -> . expression LT expression
    (49) expression -> . expression GT expression
    (50) expression -> . expression LE expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression NE expression
    (53) expression -> . expression BOOLEQUAL expression
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . ID INCREMENT
    (57) expression -> . ID DECREMENT
    (60) expression -> . expression ARROW ID
    (61) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE
    (62) if_statement -> . IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE
    (63) while_statement -> . WHILE LPAREN expression RPAREN LBRACE code RBRACE
    (64) for_statement -> . FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE
    (68) array_declaration -> . datatype ID LBRACKET INTCONST RBRACKET
    (69) array_assignment -> . ID LBRACKET expression RBRACKET EQUAL expression
    (71) write_statement -> . WRITE LPAREN expression RPAREN STMT_TERMINATOR
    (72) writeln_statement -> . WRITELN LPAREN expression RPAREN STMT_TERMINATOR
    (73) break_statement -> . BREAK STMT_TERMINATOR
    (74) return_statement -> . RETURN expression STMT_TERMINATOR
    (75) return_statement -> . RETURN STMT_TERMINATOR
    (24) datatype -> . INT
    (25) datatype -> . FLOAT
    (26) datatype -> . BOOL
    (27) datatype -> . CHAR
    (28) datatype -> . DOUBLE
    (29) datatype -> . LONG
    (30) datatype -> . STRING
    (34) term -> . term MULT factor
    (35) term -> . term DIVIDE factor
    (36) term -> . term MOD factor
    (37) term -> . factor
    (38) factor -> . ID
    (39) factor -> . INTCONST
    (40) factor -> . FLOATCONST
    (41) factor -> . DOUBLECONST
    (42) factor -> . LONGCONST
    (43) factor -> . BOOLCONST
    (44) factor -> . STRCONST
    (45) factor -> . CHARCONST
    (46) factor -> . array_access
    (47) factor -> . LPAREN expression RPAREN
    (70) array_access -> . ID LBRACKET expression RBRACKET

    RBRACE          shift and go to state 154
    ID              shift and go to state 5
    IF              shift and go to state 22
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    WRITE           shift and go to state 27
    WRITELN         shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    BOOL            shift and go to state 33
    CHAR            shift and go to state 34
    DOUBLE          shift and go to state 35
    LONG            shift and go to state 36
    STRING          shift and go to state 37
    INTCONST        shift and go to state 26
    FLOATCONST      shift and go to state 39
    DOUBLECONST     shift and go to state 40
    LONGCONST       shift and go to state 41
    BOOLCONST       shift and go to state 42
    STRCONST        shift and go to state 43
    CHARCONST       shift and go to state 44
    LPAREN          shift and go to state 23

    assignment                     shift and go to state 8
    expression                     shift and go to state 10
    statement                      shift and go to state 53
    declaration                    shift and go to state 9
    if_statement                   shift and go to state 11
    while_statement                shift and go to state 12
    for_statement                  shift and go to state 13
    array_declaration              shift and go to state 14
    array_assignment               shift and go to state 15
    write_statement                shift and go to state 16
    writeln_statement              shift and go to state 17
    break_statement                shift and go to state 18
    return_statement               shift and go to state 19
    datatype                       shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 38
    array_access                   shift and go to state 45

state 153

    (62) if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .

    RBRACE          reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    ID              reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    IF              reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    WHILE           reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    FOR             reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    WRITE           reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    WRITELN         reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    BREAK           reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    RETURN          reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    INT             reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    FLOAT           reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    BOOL            reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    CHAR            reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    DOUBLE          reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    LONG            reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    STRING          reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    INTCONST        reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    FLOATCONST      reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    DOUBLECONST     reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    LONGCONST       reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    BOOLCONST       reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    STRCONST        reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    CHARCONST       reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)
    LPAREN          reduce using rule 62 (if_statement -> IF LPAREN expression RPAREN LBRACE code RBRACE ELSE LBRACE code RBRACE .)


state 154

    (64) for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .

    RBRACE          reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    ID              reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    IF              reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    WHILE           reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    FOR             reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    WRITE           reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    WRITELN         reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    BREAK           reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    RETURN          reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    INT             reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    FLOAT           reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    BOOL            reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    CHAR            reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    DOUBLE          reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    LONG            reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    STRING          reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    INTCONST        reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    FLOATCONST      reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    DOUBLECONST     reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    LONGCONST       reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    BOOLCONST       reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    STRCONST        reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    CHARCONST       reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)
    LPAREN          reduce using rule 64 (for_statement -> FOR LPAREN assignment STMT_TERMINATOR expression STMT_TERMINATOR expression RPAREN LBRACE code RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 99 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 99 resolved as shift
WARNING: shift/reduce conflict for LT in state 99 resolved as shift
WARNING: shift/reduce conflict for GT in state 99 resolved as shift
WARNING: shift/reduce conflict for LE in state 99 resolved as shift
WARNING: shift/reduce conflict for GE in state 99 resolved as shift
WARNING: shift/reduce conflict for NE in state 99 resolved as shift
WARNING: shift/reduce conflict for BOOLEQUAL in state 99 resolved as shift
WARNING: shift/reduce conflict for AND in state 99 resolved as shift
WARNING: shift/reduce conflict for OR in state 99 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 99 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 100 resolved as shift
WARNING: shift/reduce conflict for LT in state 100 resolved as shift
WARNING: shift/reduce conflict for GT in state 100 resolved as shift
WARNING: shift/reduce conflict for LE in state 100 resolved as shift
WARNING: shift/reduce conflict for GE in state 100 resolved as shift
WARNING: shift/reduce conflict for NE in state 100 resolved as shift
WARNING: shift/reduce conflict for BOOLEQUAL in state 100 resolved as shift
WARNING: shift/reduce conflict for AND in state 100 resolved as shift
WARNING: shift/reduce conflict for OR in state 100 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 100 resolved as shift
